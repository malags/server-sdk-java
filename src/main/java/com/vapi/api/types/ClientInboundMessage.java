/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ClientInboundMessage.Builder.class)
public final class ClientInboundMessage {
    private final ClientInboundMessageMessage message;

    private final Map<String, Object> additionalProperties;

    private ClientInboundMessage(ClientInboundMessageMessage message, Map<String, Object> additionalProperties) {
        this.message = message;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return These are the messages that can be sent from client-side SDKs to control the call.
     */
    @JsonProperty("message")
    public ClientInboundMessageMessage getMessage() {
        return message;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClientInboundMessage && equalTo((ClientInboundMessage) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClientInboundMessage other) {
        return message.equals(other.message);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.message);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MessageStage builder() {
        return new Builder();
    }

    public interface MessageStage {
        /**
         * <p>These are the messages that can be sent from client-side SDKs to control the call.</p>
         */
        _FinalStage message(@NotNull ClientInboundMessageMessage message);

        Builder from(ClientInboundMessage other);
    }

    public interface _FinalStage {
        ClientInboundMessage build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MessageStage, _FinalStage {
        private ClientInboundMessageMessage message;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ClientInboundMessage other) {
            message(other.getMessage());
            return this;
        }

        /**
         * <p>These are the messages that can be sent from client-side SDKs to control the call.</p>
         * <p>These are the messages that can be sent from client-side SDKs to control the call.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("message")
        public _FinalStage message(@NotNull ClientInboundMessageMessage message) {
            this.message = Objects.requireNonNull(message, "message must not be null");
            return this;
        }

        @java.lang.Override
        public ClientInboundMessage build() {
            return new ClientInboundMessage(message, additionalProperties);
        }
    }
}
