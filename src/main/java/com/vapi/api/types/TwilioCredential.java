/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TwilioCredential.Builder.class)
public final class TwilioCredential {
    private final Optional<String> authToken;

    private final Optional<String> apiKey;

    private final Optional<String> apiSecret;

    private final String id;

    private final String orgId;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final Optional<String> name;

    private final String accountSid;

    private final Map<String, Object> additionalProperties;

    private TwilioCredential(
            Optional<String> authToken,
            Optional<String> apiKey,
            Optional<String> apiSecret,
            String id,
            String orgId,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            Optional<String> name,
            String accountSid,
            Map<String, Object> additionalProperties) {
        this.authToken = authToken;
        this.apiKey = apiKey;
        this.apiSecret = apiSecret;
        this.id = id;
        this.orgId = orgId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.name = name;
        this.accountSid = accountSid;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("provider")
    public String getProvider() {
        return "twilio";
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("authToken")
    public Optional<String> getAuthToken() {
        return authToken;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiKey")
    public Optional<String> getApiKey() {
        return apiKey;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiSecret")
    public Optional<String> getApiSecret() {
        return apiSecret;
    }

    /**
     * @return This is the unique identifier for the credential.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return This is the unique identifier for the org that this credential belongs to.
     */
    @JsonProperty("orgId")
    public String getOrgId() {
        return orgId;
    }

    /**
     * @return This is the ISO 8601 date-time string of when the credential was created.
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return This is the ISO 8601 date-time string of when the assistant was last updated.
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @JsonProperty("accountSid")
    public String getAccountSid() {
        return accountSid;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TwilioCredential && equalTo((TwilioCredential) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TwilioCredential other) {
        return authToken.equals(other.authToken)
                && apiKey.equals(other.apiKey)
                && apiSecret.equals(other.apiSecret)
                && id.equals(other.id)
                && orgId.equals(other.orgId)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && name.equals(other.name)
                && accountSid.equals(other.accountSid);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.authToken,
                this.apiKey,
                this.apiSecret,
                this.id,
                this.orgId,
                this.createdAt,
                this.updatedAt,
                this.name,
                this.accountSid);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>This is the unique identifier for the credential.</p>
         */
        OrgIdStage id(@NotNull String id);

        Builder from(TwilioCredential other);
    }

    public interface OrgIdStage {
        /**
         * <p>This is the unique identifier for the org that this credential belongs to.</p>
         */
        CreatedAtStage orgId(@NotNull String orgId);
    }

    public interface CreatedAtStage {
        /**
         * <p>This is the ISO 8601 date-time string of when the credential was created.</p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>This is the ISO 8601 date-time string of when the assistant was last updated.</p>
         */
        AccountSidStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface AccountSidStage {
        _FinalStage accountSid(@NotNull String accountSid);
    }

    public interface _FinalStage {
        TwilioCredential build();

        /**
         * <p>This is not returned in the API.</p>
         */
        _FinalStage authToken(Optional<String> authToken);

        _FinalStage authToken(String authToken);

        /**
         * <p>This is not returned in the API.</p>
         */
        _FinalStage apiKey(Optional<String> apiKey);

        _FinalStage apiKey(String apiKey);

        /**
         * <p>This is not returned in the API.</p>
         */
        _FinalStage apiSecret(Optional<String> apiSecret);

        _FinalStage apiSecret(String apiSecret);

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        _FinalStage name(Optional<String> name);

        _FinalStage name(String name);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements IdStage, OrgIdStage, CreatedAtStage, UpdatedAtStage, AccountSidStage, _FinalStage {
        private String id;

        private String orgId;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private String accountSid;

        private Optional<String> name = Optional.empty();

        private Optional<String> apiSecret = Optional.empty();

        private Optional<String> apiKey = Optional.empty();

        private Optional<String> authToken = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TwilioCredential other) {
            authToken(other.getAuthToken());
            apiKey(other.getApiKey());
            apiSecret(other.getApiSecret());
            id(other.getId());
            orgId(other.getOrgId());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            name(other.getName());
            accountSid(other.getAccountSid());
            return this;
        }

        /**
         * <p>This is the unique identifier for the credential.</p>
         * <p>This is the unique identifier for the credential.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public OrgIdStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>This is the unique identifier for the org that this credential belongs to.</p>
         * <p>This is the unique identifier for the org that this credential belongs to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("orgId")
        public CreatedAtStage orgId(@NotNull String orgId) {
            this.orgId = Objects.requireNonNull(orgId, "orgId must not be null");
            return this;
        }

        /**
         * <p>This is the ISO 8601 date-time string of when the credential was created.</p>
         * <p>This is the ISO 8601 date-time string of when the credential was created.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>This is the ISO 8601 date-time string of when the assistant was last updated.</p>
         * <p>This is the ISO 8601 date-time string of when the assistant was last updated.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public AccountSidStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("accountSid")
        public _FinalStage accountSid(@NotNull String accountSid) {
            this.accountSid = Objects.requireNonNull(accountSid, "accountSid must not be null");
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(Optional<String> name) {
            this.name = name;
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage apiSecret(String apiSecret) {
            this.apiSecret = Optional.ofNullable(apiSecret);
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "apiSecret", nulls = Nulls.SKIP)
        public _FinalStage apiSecret(Optional<String> apiSecret) {
            this.apiSecret = apiSecret;
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage apiKey(String apiKey) {
            this.apiKey = Optional.ofNullable(apiKey);
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "apiKey", nulls = Nulls.SKIP)
        public _FinalStage apiKey(Optional<String> apiKey) {
            this.apiKey = apiKey;
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage authToken(String authToken) {
            this.authToken = Optional.ofNullable(authToken);
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "authToken", nulls = Nulls.SKIP)
        public _FinalStage authToken(Optional<String> authToken) {
            this.authToken = authToken;
            return this;
        }

        @java.lang.Override
        public TwilioCredential build() {
            return new TwilioCredential(
                    authToken,
                    apiKey,
                    apiSecret,
                    id,
                    orgId,
                    createdAt,
                    updatedAt,
                    name,
                    accountSid,
                    additionalProperties);
        }
    }
}
