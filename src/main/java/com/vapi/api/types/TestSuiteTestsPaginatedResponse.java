/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TestSuiteTestsPaginatedResponse.Builder.class)
public final class TestSuiteTestsPaginatedResponse {
    private final List<TestSuiteTestsPaginatedResponseResultsItem> results;

    private final PaginationMeta metadata;

    private final Map<String, Object> additionalProperties;

    private TestSuiteTestsPaginatedResponse(
            List<TestSuiteTestsPaginatedResponseResultsItem> results,
            PaginationMeta metadata,
            Map<String, Object> additionalProperties) {
        this.results = results;
        this.metadata = metadata;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return A list of test suite tests.
     */
    @JsonProperty("results")
    public List<TestSuiteTestsPaginatedResponseResultsItem> getResults() {
        return results;
    }

    /**
     * @return Metadata about the pagination.
     */
    @JsonProperty("metadata")
    public PaginationMeta getMetadata() {
        return metadata;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TestSuiteTestsPaginatedResponse && equalTo((TestSuiteTestsPaginatedResponse) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TestSuiteTestsPaginatedResponse other) {
        return results.equals(other.results) && metadata.equals(other.metadata);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.results, this.metadata);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MetadataStage builder() {
        return new Builder();
    }

    public interface MetadataStage {
        /**
         * <p>Metadata about the pagination.</p>
         */
        _FinalStage metadata(@NotNull PaginationMeta metadata);

        Builder from(TestSuiteTestsPaginatedResponse other);
    }

    public interface _FinalStage {
        TestSuiteTestsPaginatedResponse build();

        /**
         * <p>A list of test suite tests.</p>
         */
        _FinalStage results(List<TestSuiteTestsPaginatedResponseResultsItem> results);

        _FinalStage addResults(TestSuiteTestsPaginatedResponseResultsItem results);

        _FinalStage addAllResults(List<TestSuiteTestsPaginatedResponseResultsItem> results);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MetadataStage, _FinalStage {
        private PaginationMeta metadata;

        private List<TestSuiteTestsPaginatedResponseResultsItem> results = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TestSuiteTestsPaginatedResponse other) {
            results(other.getResults());
            metadata(other.getMetadata());
            return this;
        }

        /**
         * <p>Metadata about the pagination.</p>
         * <p>Metadata about the pagination.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("metadata")
        public _FinalStage metadata(@NotNull PaginationMeta metadata) {
            this.metadata = Objects.requireNonNull(metadata, "metadata must not be null");
            return this;
        }

        /**
         * <p>A list of test suite tests.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllResults(List<TestSuiteTestsPaginatedResponseResultsItem> results) {
            this.results.addAll(results);
            return this;
        }

        /**
         * <p>A list of test suite tests.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addResults(TestSuiteTestsPaginatedResponseResultsItem results) {
            this.results.add(results);
            return this;
        }

        /**
         * <p>A list of test suite tests.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "results", nulls = Nulls.SKIP)
        public _FinalStage results(List<TestSuiteTestsPaginatedResponseResultsItem> results) {
            this.results.clear();
            this.results.addAll(results);
            return this;
        }

        @java.lang.Override
        public TestSuiteTestsPaginatedResponse build() {
            return new TestSuiteTestsPaginatedResponse(results, metadata, additionalProperties);
        }
    }
}
