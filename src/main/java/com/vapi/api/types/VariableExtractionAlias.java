/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = VariableExtractionAlias.Builder.class)
public final class VariableExtractionAlias {
    private final String key;

    private final String value;

    private final Map<String, Object> additionalProperties;

    private VariableExtractionAlias(String key, String value, Map<String, Object> additionalProperties) {
        this.key = key;
        this.value = value;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the key of the variable.
     * <p>This variable will be accessible during the call as <code>{{key}}</code> and stored in <code>call.artifact.variableValues</code> after the call.</p>
     * <p>Rules:</p>
     * <ul>
     * <li>Must start with a letter (a-z, A-Z).</li>
     * <li>Subsequent characters can be letters, numbers, or underscores.</li>
     * <li>Minimum length of 1 and maximum length of 40.</li>
     * </ul>
     */
    @JsonProperty("key")
    public String getKey() {
        return key;
    }

    /**
     * @return This is the value of the variable.
     * <p>This can reference existing variables, use filters, and perform transformations.</p>
     * <p>Examples: &quot;{{name}}&quot;, &quot;{{customer.email}}&quot;, &quot;Hello {{name | upcase}}&quot;</p>
     */
    @JsonProperty("value")
    public String getValue() {
        return value;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VariableExtractionAlias && equalTo((VariableExtractionAlias) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VariableExtractionAlias other) {
        return key.equals(other.key) && value.equals(other.value);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.key, this.value);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static KeyStage builder() {
        return new Builder();
    }

    public interface KeyStage {
        /**
         * <p>This is the key of the variable.</p>
         * <p>This variable will be accessible during the call as <code>{{key}}</code> and stored in <code>call.artifact.variableValues</code> after the call.</p>
         * <p>Rules:</p>
         * <ul>
         * <li>Must start with a letter (a-z, A-Z).</li>
         * <li>Subsequent characters can be letters, numbers, or underscores.</li>
         * <li>Minimum length of 1 and maximum length of 40.</li>
         * </ul>
         */
        ValueStage key(@NotNull String key);

        Builder from(VariableExtractionAlias other);
    }

    public interface ValueStage {
        /**
         * <p>This is the value of the variable.</p>
         * <p>This can reference existing variables, use filters, and perform transformations.</p>
         * <p>Examples: &quot;{{name}}&quot;, &quot;{{customer.email}}&quot;, &quot;Hello {{name | upcase}}&quot;</p>
         */
        _FinalStage value(@NotNull String value);
    }

    public interface _FinalStage {
        VariableExtractionAlias build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements KeyStage, ValueStage, _FinalStage {
        private String key;

        private String value;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(VariableExtractionAlias other) {
            key(other.getKey());
            value(other.getValue());
            return this;
        }

        /**
         * <p>This is the key of the variable.</p>
         * <p>This variable will be accessible during the call as <code>{{key}}</code> and stored in <code>call.artifact.variableValues</code> after the call.</p>
         * <p>Rules:</p>
         * <ul>
         * <li>Must start with a letter (a-z, A-Z).</li>
         * <li>Subsequent characters can be letters, numbers, or underscores.</li>
         * <li>Minimum length of 1 and maximum length of 40.</li>
         * </ul>
         * <p>This is the key of the variable.</p>
         * <p>This variable will be accessible during the call as <code>{{key}}</code> and stored in <code>call.artifact.variableValues</code> after the call.</p>
         * <p>Rules:</p>
         * <ul>
         * <li>Must start with a letter (a-z, A-Z).</li>
         * <li>Subsequent characters can be letters, numbers, or underscores.</li>
         * <li>Minimum length of 1 and maximum length of 40.</li>
         * </ul>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("key")
        public ValueStage key(@NotNull String key) {
            this.key = Objects.requireNonNull(key, "key must not be null");
            return this;
        }

        /**
         * <p>This is the value of the variable.</p>
         * <p>This can reference existing variables, use filters, and perform transformations.</p>
         * <p>Examples: &quot;{{name}}&quot;, &quot;{{customer.email}}&quot;, &quot;Hello {{name | upcase}}&quot;</p>
         * <p>This is the value of the variable.</p>
         * <p>This can reference existing variables, use filters, and perform transformations.</p>
         * <p>Examples: &quot;{{name}}&quot;, &quot;{{customer.email}}&quot;, &quot;Hello {{name | upcase}}&quot;</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("value")
        public _FinalStage value(@NotNull String value) {
            this.value = Objects.requireNonNull(value, "value must not be null");
            return this;
        }

        @java.lang.Override
        public VariableExtractionAlias build() {
            return new VariableExtractionAlias(key, value, additionalProperties);
        }
    }
}
