/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TrieveKnowledgeBaseImport.Builder.class)
public final class TrieveKnowledgeBaseImport {
    private final String providerId;

    private final Map<String, Object> additionalProperties;

    private TrieveKnowledgeBaseImport(String providerId, Map<String, Object> additionalProperties) {
        this.providerId = providerId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is to import an existing dataset from Trieve.
     */
    @JsonProperty("type")
    public String getType() {
        return "import";
    }

    /**
     * @return This is the <code>datasetId</code> of the dataset on your Trieve account.
     */
    @JsonProperty("providerId")
    public String getProviderId() {
        return providerId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TrieveKnowledgeBaseImport && equalTo((TrieveKnowledgeBaseImport) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TrieveKnowledgeBaseImport other) {
        return providerId.equals(other.providerId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.providerId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProviderIdStage builder() {
        return new Builder();
    }

    public interface ProviderIdStage {
        /**
         * <p>This is the <code>datasetId</code> of the dataset on your Trieve account.</p>
         */
        _FinalStage providerId(@NotNull String providerId);

        Builder from(TrieveKnowledgeBaseImport other);
    }

    public interface _FinalStage {
        TrieveKnowledgeBaseImport build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ProviderIdStage, _FinalStage {
        private String providerId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TrieveKnowledgeBaseImport other) {
            providerId(other.getProviderId());
            return this;
        }

        /**
         * <p>This is the <code>datasetId</code> of the dataset on your Trieve account.</p>
         * <p>This is the <code>datasetId</code> of the dataset on your Trieve account.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("providerId")
        public _FinalStage providerId(@NotNull String providerId) {
            this.providerId = Objects.requireNonNull(providerId, "providerId must not be null");
            return this;
        }

        @java.lang.Override
        public TrieveKnowledgeBaseImport build() {
            return new TrieveKnowledgeBaseImport(providerId, additionalProperties);
        }
    }
}
