/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateMakeCredentialDto.Builder.class)
public final class UpdateMakeCredentialDto {
    private final Optional<String> teamId;

    private final Optional<String> region;

    private final Optional<String> apiKey;

    private final Optional<String> name;

    private final Map<String, Object> additionalProperties;

    private UpdateMakeCredentialDto(
            Optional<String> teamId,
            Optional<String> region,
            Optional<String> apiKey,
            Optional<String> name,
            Map<String, Object> additionalProperties) {
        this.teamId = teamId;
        this.region = region;
        this.apiKey = apiKey;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return Team ID
     */
    @JsonProperty("teamId")
    public Optional<String> getTeamId() {
        return teamId;
    }

    /**
     * @return Region of your application. For example: eu1, eu2, us1, us2
     */
    @JsonProperty("region")
    public Optional<String> getRegion() {
        return region;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiKey")
    public Optional<String> getApiKey() {
        return apiKey;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateMakeCredentialDto && equalTo((UpdateMakeCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateMakeCredentialDto other) {
        return teamId.equals(other.teamId)
                && region.equals(other.region)
                && apiKey.equals(other.apiKey)
                && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.teamId, this.region, this.apiKey, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> teamId = Optional.empty();

        private Optional<String> region = Optional.empty();

        private Optional<String> apiKey = Optional.empty();

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UpdateMakeCredentialDto other) {
            teamId(other.getTeamId());
            region(other.getRegion());
            apiKey(other.getApiKey());
            name(other.getName());
            return this;
        }

        /**
         * <p>Team ID</p>
         */
        @JsonSetter(value = "teamId", nulls = Nulls.SKIP)
        public Builder teamId(Optional<String> teamId) {
            this.teamId = teamId;
            return this;
        }

        public Builder teamId(String teamId) {
            this.teamId = Optional.ofNullable(teamId);
            return this;
        }

        /**
         * <p>Region of your application. For example: eu1, eu2, us1, us2</p>
         */
        @JsonSetter(value = "region", nulls = Nulls.SKIP)
        public Builder region(Optional<String> region) {
            this.region = region;
            return this;
        }

        public Builder region(String region) {
            this.region = Optional.ofNullable(region);
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         */
        @JsonSetter(value = "apiKey", nulls = Nulls.SKIP)
        public Builder apiKey(Optional<String> apiKey) {
            this.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(String apiKey) {
            this.apiKey = Optional.ofNullable(apiKey);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        public UpdateMakeCredentialDto build() {
            return new UpdateMakeCredentialDto(teamId, region, apiKey, name, additionalProperties);
        }
    }
}
