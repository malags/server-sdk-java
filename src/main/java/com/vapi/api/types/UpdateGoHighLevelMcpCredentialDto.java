/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateGoHighLevelMcpCredentialDto.Builder.class)
public final class UpdateGoHighLevelMcpCredentialDto {
    private final Optional<Oauth2AuthenticationSession> authenticationSession;

    private final Optional<String> name;

    private final Map<String, Object> additionalProperties;

    private UpdateGoHighLevelMcpCredentialDto(
            Optional<Oauth2AuthenticationSession> authenticationSession,
            Optional<String> name,
            Map<String, Object> additionalProperties) {
        this.authenticationSession = authenticationSession;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the authentication session for the credential.
     */
    @JsonProperty("authenticationSession")
    public Optional<Oauth2AuthenticationSession> getAuthenticationSession() {
        return authenticationSession;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateGoHighLevelMcpCredentialDto && equalTo((UpdateGoHighLevelMcpCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateGoHighLevelMcpCredentialDto other) {
        return authenticationSession.equals(other.authenticationSession) && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.authenticationSession, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Oauth2AuthenticationSession> authenticationSession = Optional.empty();

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UpdateGoHighLevelMcpCredentialDto other) {
            authenticationSession(other.getAuthenticationSession());
            name(other.getName());
            return this;
        }

        /**
         * <p>This is the authentication session for the credential.</p>
         */
        @JsonSetter(value = "authenticationSession", nulls = Nulls.SKIP)
        public Builder authenticationSession(Optional<Oauth2AuthenticationSession> authenticationSession) {
            this.authenticationSession = authenticationSession;
            return this;
        }

        public Builder authenticationSession(Oauth2AuthenticationSession authenticationSession) {
            this.authenticationSession = Optional.ofNullable(authenticationSession);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        public UpdateGoHighLevelMcpCredentialDto build() {
            return new UpdateGoHighLevelMcpCredentialDto(authenticationSession, name, additionalProperties);
        }
    }
}
