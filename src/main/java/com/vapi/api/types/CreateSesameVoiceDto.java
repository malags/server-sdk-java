/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateSesameVoiceDto.Builder.class)
public final class CreateSesameVoiceDto {
    private final Optional<String> voiceName;

    private final Optional<String> transcription;

    private final Map<String, Object> additionalProperties;

    private CreateSesameVoiceDto(
            Optional<String> voiceName, Optional<String> transcription, Map<String, Object> additionalProperties) {
        this.voiceName = voiceName;
        this.transcription = transcription;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The name of the voice.
     */
    @JsonProperty("voiceName")
    public Optional<String> getVoiceName() {
        return voiceName;
    }

    /**
     * @return The transcript of the utterance.
     */
    @JsonProperty("transcription")
    public Optional<String> getTranscription() {
        return transcription;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateSesameVoiceDto && equalTo((CreateSesameVoiceDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateSesameVoiceDto other) {
        return voiceName.equals(other.voiceName) && transcription.equals(other.transcription);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.voiceName, this.transcription);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> voiceName = Optional.empty();

        private Optional<String> transcription = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(CreateSesameVoiceDto other) {
            voiceName(other.getVoiceName());
            transcription(other.getTranscription());
            return this;
        }

        /**
         * <p>The name of the voice.</p>
         */
        @JsonSetter(value = "voiceName", nulls = Nulls.SKIP)
        public Builder voiceName(Optional<String> voiceName) {
            this.voiceName = voiceName;
            return this;
        }

        public Builder voiceName(String voiceName) {
            this.voiceName = Optional.ofNullable(voiceName);
            return this;
        }

        /**
         * <p>The transcript of the utterance.</p>
         */
        @JsonSetter(value = "transcription", nulls = Nulls.SKIP)
        public Builder transcription(Optional<String> transcription) {
            this.transcription = transcription;
            return this;
        }

        public Builder transcription(String transcription) {
            this.transcription = Optional.ofNullable(transcription);
            return this;
        }

        public CreateSesameVoiceDto build() {
            return new CreateSesameVoiceDto(voiceName, transcription, additionalProperties);
        }
    }
}
