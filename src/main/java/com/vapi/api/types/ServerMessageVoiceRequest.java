/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ServerMessageVoiceRequest.Builder.class)
public final class ServerMessageVoiceRequest {
    private final Optional<ServerMessageVoiceRequestPhoneNumber> phoneNumber;

    private final Optional<Double> timestamp;

    private final Optional<Artifact> artifact;

    private final Optional<CreateAssistantDto> assistant;

    private final Optional<CreateCustomerDto> customer;

    private final Optional<Call> call;

    private final Optional<Chat> chat;

    private final String text;

    private final double sampleRate;

    private final Map<String, Object> additionalProperties;

    private ServerMessageVoiceRequest(
            Optional<ServerMessageVoiceRequestPhoneNumber> phoneNumber,
            Optional<Double> timestamp,
            Optional<Artifact> artifact,
            Optional<CreateAssistantDto> assistant,
            Optional<CreateCustomerDto> customer,
            Optional<Call> call,
            Optional<Chat> chat,
            String text,
            double sampleRate,
            Map<String, Object> additionalProperties) {
        this.phoneNumber = phoneNumber;
        this.timestamp = timestamp;
        this.artifact = artifact;
        this.assistant = assistant;
        this.customer = customer;
        this.call = call;
        this.chat = chat;
        this.text = text;
        this.sampleRate = sampleRate;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the phone number that the message is associated with.
     */
    @JsonProperty("phoneNumber")
    public Optional<ServerMessageVoiceRequestPhoneNumber> getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * @return This is the type of the message. &quot;voice-request&quot; is sent when using <code>assistant.voice={ &quot;type&quot;: &quot;custom-voice&quot; }</code>.
     * <p>Here is what the request will look like:</p>
     * <p>POST https://{assistant.voice.server.url}
     * Content-Type: application/json</p>
     * <p>{
     * &quot;messsage&quot;: {
     * &quot;type&quot;: &quot;voice-request&quot;,
     * &quot;text&quot;: &quot;Hello, world!&quot;,
     * &quot;sampleRate&quot;: 24000,
     * ...other metadata about the call...
     * }
     * }</p>
     * <p>The expected response is 1-channel 16-bit raw PCM audio at the sample rate specified in the request. Here is how the response will be piped to the transport:</p>
     * <pre><code>response.on('data', (chunk: Buffer) =&gt; {
     *   outputStream.write(chunk);
     * });
     * </code></pre>
     */
    @JsonProperty("type")
    public String getType() {
        return "voice-request";
    }

    /**
     * @return This is the timestamp of the message.
     */
    @JsonProperty("timestamp")
    public Optional<Double> getTimestamp() {
        return timestamp;
    }

    /**
     * @return This is a live version of the <code>call.artifact</code>.
     * <p>This matches what is stored on <code>call.artifact</code> after the call.</p>
     */
    @JsonProperty("artifact")
    public Optional<Artifact> getArtifact() {
        return artifact;
    }

    /**
     * @return This is the assistant that the message is associated with.
     */
    @JsonProperty("assistant")
    public Optional<CreateAssistantDto> getAssistant() {
        return assistant;
    }

    /**
     * @return This is the customer that the message is associated with.
     */
    @JsonProperty("customer")
    public Optional<CreateCustomerDto> getCustomer() {
        return customer;
    }

    /**
     * @return This is the call that the message is associated with.
     */
    @JsonProperty("call")
    public Optional<Call> getCall() {
        return call;
    }

    /**
     * @return This is the chat object.
     */
    @JsonProperty("chat")
    public Optional<Chat> getChat() {
        return chat;
    }

    /**
     * @return This is the text to be synthesized.
     */
    @JsonProperty("text")
    public String getText() {
        return text;
    }

    /**
     * @return This is the sample rate to be synthesized.
     */
    @JsonProperty("sampleRate")
    public double getSampleRate() {
        return sampleRate;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ServerMessageVoiceRequest && equalTo((ServerMessageVoiceRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ServerMessageVoiceRequest other) {
        return phoneNumber.equals(other.phoneNumber)
                && timestamp.equals(other.timestamp)
                && artifact.equals(other.artifact)
                && assistant.equals(other.assistant)
                && customer.equals(other.customer)
                && call.equals(other.call)
                && chat.equals(other.chat)
                && text.equals(other.text)
                && sampleRate == other.sampleRate;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.phoneNumber,
                this.timestamp,
                this.artifact,
                this.assistant,
                this.customer,
                this.call,
                this.chat,
                this.text,
                this.sampleRate);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TextStage builder() {
        return new Builder();
    }

    public interface TextStage {
        /**
         * <p>This is the text to be synthesized.</p>
         */
        SampleRateStage text(@NotNull String text);

        Builder from(ServerMessageVoiceRequest other);
    }

    public interface SampleRateStage {
        /**
         * <p>This is the sample rate to be synthesized.</p>
         */
        _FinalStage sampleRate(double sampleRate);
    }

    public interface _FinalStage {
        ServerMessageVoiceRequest build();

        /**
         * <p>This is the phone number that the message is associated with.</p>
         */
        _FinalStage phoneNumber(Optional<ServerMessageVoiceRequestPhoneNumber> phoneNumber);

        _FinalStage phoneNumber(ServerMessageVoiceRequestPhoneNumber phoneNumber);

        /**
         * <p>This is the timestamp of the message.</p>
         */
        _FinalStage timestamp(Optional<Double> timestamp);

        _FinalStage timestamp(Double timestamp);

        /**
         * <p>This is a live version of the <code>call.artifact</code>.</p>
         * <p>This matches what is stored on <code>call.artifact</code> after the call.</p>
         */
        _FinalStage artifact(Optional<Artifact> artifact);

        _FinalStage artifact(Artifact artifact);

        /**
         * <p>This is the assistant that the message is associated with.</p>
         */
        _FinalStage assistant(Optional<CreateAssistantDto> assistant);

        _FinalStage assistant(CreateAssistantDto assistant);

        /**
         * <p>This is the customer that the message is associated with.</p>
         */
        _FinalStage customer(Optional<CreateCustomerDto> customer);

        _FinalStage customer(CreateCustomerDto customer);

        /**
         * <p>This is the call that the message is associated with.</p>
         */
        _FinalStage call(Optional<Call> call);

        _FinalStage call(Call call);

        /**
         * <p>This is the chat object.</p>
         */
        _FinalStage chat(Optional<Chat> chat);

        _FinalStage chat(Chat chat);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TextStage, SampleRateStage, _FinalStage {
        private String text;

        private double sampleRate;

        private Optional<Chat> chat = Optional.empty();

        private Optional<Call> call = Optional.empty();

        private Optional<CreateCustomerDto> customer = Optional.empty();

        private Optional<CreateAssistantDto> assistant = Optional.empty();

        private Optional<Artifact> artifact = Optional.empty();

        private Optional<Double> timestamp = Optional.empty();

        private Optional<ServerMessageVoiceRequestPhoneNumber> phoneNumber = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ServerMessageVoiceRequest other) {
            phoneNumber(other.getPhoneNumber());
            timestamp(other.getTimestamp());
            artifact(other.getArtifact());
            assistant(other.getAssistant());
            customer(other.getCustomer());
            call(other.getCall());
            chat(other.getChat());
            text(other.getText());
            sampleRate(other.getSampleRate());
            return this;
        }

        /**
         * <p>This is the text to be synthesized.</p>
         * <p>This is the text to be synthesized.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("text")
        public SampleRateStage text(@NotNull String text) {
            this.text = Objects.requireNonNull(text, "text must not be null");
            return this;
        }

        /**
         * <p>This is the sample rate to be synthesized.</p>
         * <p>This is the sample rate to be synthesized.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("sampleRate")
        public _FinalStage sampleRate(double sampleRate) {
            this.sampleRate = sampleRate;
            return this;
        }

        /**
         * <p>This is the chat object.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage chat(Chat chat) {
            this.chat = Optional.ofNullable(chat);
            return this;
        }

        /**
         * <p>This is the chat object.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "chat", nulls = Nulls.SKIP)
        public _FinalStage chat(Optional<Chat> chat) {
            this.chat = chat;
            return this;
        }

        /**
         * <p>This is the call that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage call(Call call) {
            this.call = Optional.ofNullable(call);
            return this;
        }

        /**
         * <p>This is the call that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "call", nulls = Nulls.SKIP)
        public _FinalStage call(Optional<Call> call) {
            this.call = call;
            return this;
        }

        /**
         * <p>This is the customer that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage customer(CreateCustomerDto customer) {
            this.customer = Optional.ofNullable(customer);
            return this;
        }

        /**
         * <p>This is the customer that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "customer", nulls = Nulls.SKIP)
        public _FinalStage customer(Optional<CreateCustomerDto> customer) {
            this.customer = customer;
            return this;
        }

        /**
         * <p>This is the assistant that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage assistant(CreateAssistantDto assistant) {
            this.assistant = Optional.ofNullable(assistant);
            return this;
        }

        /**
         * <p>This is the assistant that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "assistant", nulls = Nulls.SKIP)
        public _FinalStage assistant(Optional<CreateAssistantDto> assistant) {
            this.assistant = assistant;
            return this;
        }

        /**
         * <p>This is a live version of the <code>call.artifact</code>.</p>
         * <p>This matches what is stored on <code>call.artifact</code> after the call.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage artifact(Artifact artifact) {
            this.artifact = Optional.ofNullable(artifact);
            return this;
        }

        /**
         * <p>This is a live version of the <code>call.artifact</code>.</p>
         * <p>This matches what is stored on <code>call.artifact</code> after the call.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "artifact", nulls = Nulls.SKIP)
        public _FinalStage artifact(Optional<Artifact> artifact) {
            this.artifact = artifact;
            return this;
        }

        /**
         * <p>This is the timestamp of the message.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage timestamp(Double timestamp) {
            this.timestamp = Optional.ofNullable(timestamp);
            return this;
        }

        /**
         * <p>This is the timestamp of the message.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "timestamp", nulls = Nulls.SKIP)
        public _FinalStage timestamp(Optional<Double> timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * <p>This is the phone number that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage phoneNumber(ServerMessageVoiceRequestPhoneNumber phoneNumber) {
            this.phoneNumber = Optional.ofNullable(phoneNumber);
            return this;
        }

        /**
         * <p>This is the phone number that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "phoneNumber", nulls = Nulls.SKIP)
        public _FinalStage phoneNumber(Optional<ServerMessageVoiceRequestPhoneNumber> phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        @java.lang.Override
        public ServerMessageVoiceRequest build() {
            return new ServerMessageVoiceRequest(
                    phoneNumber,
                    timestamp,
                    artifact,
                    assistant,
                    customer,
                    call,
                    chat,
                    text,
                    sampleRate,
                    additionalProperties);
        }
    }
}
