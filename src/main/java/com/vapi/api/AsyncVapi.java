/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.Suppliers;
import com.vapi.api.resources.analytics.AsyncAnalyticsClient;
import com.vapi.api.resources.assistants.AsyncAssistantsClient;
import com.vapi.api.resources.calls.AsyncCallsClient;
import com.vapi.api.resources.campaigns.AsyncCampaignsClient;
import com.vapi.api.resources.chats.AsyncChatsClient;
import com.vapi.api.resources.files.AsyncFilesClient;
import com.vapi.api.resources.knowledgebases.AsyncKnowledgeBasesClient;
import com.vapi.api.resources.logs.AsyncLogsClient;
import com.vapi.api.resources.phonenumbers.AsyncPhoneNumbersClient;
import com.vapi.api.resources.sessions.AsyncSessionsClient;
import com.vapi.api.resources.squads.AsyncSquadsClient;
import com.vapi.api.resources.testsuiteruns.AsyncTestSuiteRunsClient;
import com.vapi.api.resources.testsuites.AsyncTestSuitesClient;
import com.vapi.api.resources.testsuitetests.AsyncTestSuiteTestsClient;
import com.vapi.api.resources.tools.AsyncToolsClient;
import com.vapi.api.resources.workflow.AsyncWorkflowClient;
import java.util.function.Supplier;

public class AsyncVapi {
    protected final ClientOptions clientOptions;

    protected final Supplier<AsyncCallsClient> callsClient;

    protected final Supplier<AsyncChatsClient> chatsClient;

    protected final Supplier<AsyncCampaignsClient> campaignsClient;

    protected final Supplier<AsyncSessionsClient> sessionsClient;

    protected final Supplier<AsyncAssistantsClient> assistantsClient;

    protected final Supplier<AsyncPhoneNumbersClient> phoneNumbersClient;

    protected final Supplier<AsyncToolsClient> toolsClient;

    protected final Supplier<AsyncFilesClient> filesClient;

    protected final Supplier<AsyncKnowledgeBasesClient> knowledgeBasesClient;

    protected final Supplier<AsyncWorkflowClient> workflowClient;

    protected final Supplier<AsyncSquadsClient> squadsClient;

    protected final Supplier<AsyncTestSuitesClient> testSuitesClient;

    protected final Supplier<AsyncTestSuiteTestsClient> testSuiteTestsClient;

    protected final Supplier<AsyncTestSuiteRunsClient> testSuiteRunsClient;

    protected final Supplier<AsyncAnalyticsClient> analyticsClient;

    protected final Supplier<AsyncLogsClient> logsClient;

    public AsyncVapi(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.callsClient = Suppliers.memoize(() -> new AsyncCallsClient(clientOptions));
        this.chatsClient = Suppliers.memoize(() -> new AsyncChatsClient(clientOptions));
        this.campaignsClient = Suppliers.memoize(() -> new AsyncCampaignsClient(clientOptions));
        this.sessionsClient = Suppliers.memoize(() -> new AsyncSessionsClient(clientOptions));
        this.assistantsClient = Suppliers.memoize(() -> new AsyncAssistantsClient(clientOptions));
        this.phoneNumbersClient = Suppliers.memoize(() -> new AsyncPhoneNumbersClient(clientOptions));
        this.toolsClient = Suppliers.memoize(() -> new AsyncToolsClient(clientOptions));
        this.filesClient = Suppliers.memoize(() -> new AsyncFilesClient(clientOptions));
        this.knowledgeBasesClient = Suppliers.memoize(() -> new AsyncKnowledgeBasesClient(clientOptions));
        this.workflowClient = Suppliers.memoize(() -> new AsyncWorkflowClient(clientOptions));
        this.squadsClient = Suppliers.memoize(() -> new AsyncSquadsClient(clientOptions));
        this.testSuitesClient = Suppliers.memoize(() -> new AsyncTestSuitesClient(clientOptions));
        this.testSuiteTestsClient = Suppliers.memoize(() -> new AsyncTestSuiteTestsClient(clientOptions));
        this.testSuiteRunsClient = Suppliers.memoize(() -> new AsyncTestSuiteRunsClient(clientOptions));
        this.analyticsClient = Suppliers.memoize(() -> new AsyncAnalyticsClient(clientOptions));
        this.logsClient = Suppliers.memoize(() -> new AsyncLogsClient(clientOptions));
    }

    public AsyncCallsClient calls() {
        return this.callsClient.get();
    }

    public AsyncChatsClient chats() {
        return this.chatsClient.get();
    }

    public AsyncCampaignsClient campaigns() {
        return this.campaignsClient.get();
    }

    public AsyncSessionsClient sessions() {
        return this.sessionsClient.get();
    }

    public AsyncAssistantsClient assistants() {
        return this.assistantsClient.get();
    }

    public AsyncPhoneNumbersClient phoneNumbers() {
        return this.phoneNumbersClient.get();
    }

    public AsyncToolsClient tools() {
        return this.toolsClient.get();
    }

    public AsyncFilesClient files() {
        return this.filesClient.get();
    }

    public AsyncKnowledgeBasesClient knowledgeBases() {
        return this.knowledgeBasesClient.get();
    }

    public AsyncWorkflowClient workflow() {
        return this.workflowClient.get();
    }

    public AsyncSquadsClient squads() {
        return this.squadsClient.get();
    }

    public AsyncTestSuitesClient testSuites() {
        return this.testSuitesClient.get();
    }

    public AsyncTestSuiteTestsClient testSuiteTests() {
        return this.testSuiteTestsClient.get();
    }

    public AsyncTestSuiteRunsClient testSuiteRuns() {
        return this.testSuiteRunsClient.get();
    }

    public AsyncAnalyticsClient analytics() {
        return this.analyticsClient.get();
    }

    public AsyncLogsClient logs() {
        return this.logsClient.get();
    }

    public static AsyncVapiBuilder builder() {
        return new AsyncVapiBuilder();
    }
}
