/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ServerMessageResponseCallEndpointingRequest.Builder.class)
public final class ServerMessageResponseCallEndpointingRequest {
    private final double timeoutSeconds;

    private final Map<String, Object> additionalProperties;

    private ServerMessageResponseCallEndpointingRequest(
            double timeoutSeconds, Map<String, Object> additionalProperties) {
        this.timeoutSeconds = timeoutSeconds;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the timeout in seconds to wait before considering the user's speech as finished.
     */
    @JsonProperty("timeoutSeconds")
    public double getTimeoutSeconds() {
        return timeoutSeconds;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ServerMessageResponseCallEndpointingRequest
                && equalTo((ServerMessageResponseCallEndpointingRequest) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ServerMessageResponseCallEndpointingRequest other) {
        return timeoutSeconds == other.timeoutSeconds;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.timeoutSeconds);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TimeoutSecondsStage builder() {
        return new Builder();
    }

    public interface TimeoutSecondsStage {
        /**
         * <p>This is the timeout in seconds to wait before considering the user's speech as finished.</p>
         */
        _FinalStage timeoutSeconds(double timeoutSeconds);

        Builder from(ServerMessageResponseCallEndpointingRequest other);
    }

    public interface _FinalStage {
        ServerMessageResponseCallEndpointingRequest build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TimeoutSecondsStage, _FinalStage {
        private double timeoutSeconds;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ServerMessageResponseCallEndpointingRequest other) {
            timeoutSeconds(other.getTimeoutSeconds());
            return this;
        }

        /**
         * <p>This is the timeout in seconds to wait before considering the user's speech as finished.</p>
         * <p>This is the timeout in seconds to wait before considering the user's speech as finished.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("timeoutSeconds")
        public _FinalStage timeoutSeconds(double timeoutSeconds) {
            this.timeoutSeconds = timeoutSeconds;
            return this;
        }

        @java.lang.Override
        public ServerMessageResponseCallEndpointingRequest build() {
            return new ServerMessageResponseCallEndpointingRequest(timeoutSeconds, additionalProperties);
        }
    }
}
