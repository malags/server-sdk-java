/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateLangfuseCredentialDto.Builder.class)
public final class UpdateLangfuseCredentialDto {
    private final Optional<String> publicKey;

    private final Optional<String> apiKey;

    private final Optional<String> apiUrl;

    private final Optional<String> name;

    private final Map<String, Object> additionalProperties;

    private UpdateLangfuseCredentialDto(
            Optional<String> publicKey,
            Optional<String> apiKey,
            Optional<String> apiUrl,
            Optional<String> name,
            Map<String, Object> additionalProperties) {
        this.publicKey = publicKey;
        this.apiKey = apiKey;
        this.apiUrl = apiUrl;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return The public key for Langfuse project. Eg: pk-lf-...
     */
    @JsonProperty("publicKey")
    public Optional<String> getPublicKey() {
        return publicKey;
    }

    /**
     * @return The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API.
     */
    @JsonProperty("apiKey")
    public Optional<String> getApiKey() {
        return apiKey;
    }

    /**
     * @return The host URL for Langfuse project. Eg: https://cloud.langfuse.com
     */
    @JsonProperty("apiUrl")
    public Optional<String> getApiUrl() {
        return apiUrl;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateLangfuseCredentialDto && equalTo((UpdateLangfuseCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateLangfuseCredentialDto other) {
        return publicKey.equals(other.publicKey)
                && apiKey.equals(other.apiKey)
                && apiUrl.equals(other.apiUrl)
                && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.publicKey, this.apiKey, this.apiUrl, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> publicKey = Optional.empty();

        private Optional<String> apiKey = Optional.empty();

        private Optional<String> apiUrl = Optional.empty();

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UpdateLangfuseCredentialDto other) {
            publicKey(other.getPublicKey());
            apiKey(other.getApiKey());
            apiUrl(other.getApiUrl());
            name(other.getName());
            return this;
        }

        /**
         * <p>The public key for Langfuse project. Eg: pk-lf-...</p>
         */
        @JsonSetter(value = "publicKey", nulls = Nulls.SKIP)
        public Builder publicKey(Optional<String> publicKey) {
            this.publicKey = publicKey;
            return this;
        }

        public Builder publicKey(String publicKey) {
            this.publicKey = Optional.ofNullable(publicKey);
            return this;
        }

        /**
         * <p>The secret key for Langfuse project. Eg: sk-lf-... .This is not returned in the API.</p>
         */
        @JsonSetter(value = "apiKey", nulls = Nulls.SKIP)
        public Builder apiKey(Optional<String> apiKey) {
            this.apiKey = apiKey;
            return this;
        }

        public Builder apiKey(String apiKey) {
            this.apiKey = Optional.ofNullable(apiKey);
            return this;
        }

        /**
         * <p>The host URL for Langfuse project. Eg: https://cloud.langfuse.com</p>
         */
        @JsonSetter(value = "apiUrl", nulls = Nulls.SKIP)
        public Builder apiUrl(Optional<String> apiUrl) {
            this.apiUrl = apiUrl;
            return this;
        }

        public Builder apiUrl(String apiUrl) {
            this.apiUrl = Optional.ofNullable(apiUrl);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public Builder name(Optional<String> name) {
            this.name = name;
            return this;
        }

        public Builder name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        public UpdateLangfuseCredentialDto build() {
            return new UpdateLangfuseCredentialDto(publicKey, apiKey, apiUrl, name, additionalProperties);
        }
    }
}
