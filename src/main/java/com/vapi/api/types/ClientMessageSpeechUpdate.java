/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ClientMessageSpeechUpdate.Builder.class)
public final class ClientMessageSpeechUpdate {
    private final Optional<ClientMessageSpeechUpdatePhoneNumber> phoneNumber;

    private final ClientMessageSpeechUpdateStatus status;

    private final ClientMessageSpeechUpdateRole role;

    private final Optional<Double> turn;

    private final Optional<Double> timestamp;

    private final Optional<Call> call;

    private final Optional<CreateCustomerDto> customer;

    private final Optional<CreateAssistantDto> assistant;

    private final Map<String, Object> additionalProperties;

    private ClientMessageSpeechUpdate(
            Optional<ClientMessageSpeechUpdatePhoneNumber> phoneNumber,
            ClientMessageSpeechUpdateStatus status,
            ClientMessageSpeechUpdateRole role,
            Optional<Double> turn,
            Optional<Double> timestamp,
            Optional<Call> call,
            Optional<CreateCustomerDto> customer,
            Optional<CreateAssistantDto> assistant,
            Map<String, Object> additionalProperties) {
        this.phoneNumber = phoneNumber;
        this.status = status;
        this.role = role;
        this.turn = turn;
        this.timestamp = timestamp;
        this.call = call;
        this.customer = customer;
        this.assistant = assistant;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the phone number that the message is associated with.
     */
    @JsonProperty("phoneNumber")
    public Optional<ClientMessageSpeechUpdatePhoneNumber> getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * @return This is the type of the message. &quot;speech-update&quot; is sent whenever assistant or user start or stop speaking.
     */
    @JsonProperty("type")
    public String getType() {
        return "speech-update";
    }

    /**
     * @return This is the status of the speech update.
     */
    @JsonProperty("status")
    public ClientMessageSpeechUpdateStatus getStatus() {
        return status;
    }

    /**
     * @return This is the role which the speech update is for.
     */
    @JsonProperty("role")
    public ClientMessageSpeechUpdateRole getRole() {
        return role;
    }

    /**
     * @return This is the turn number of the speech update (0-indexed).
     */
    @JsonProperty("turn")
    public Optional<Double> getTurn() {
        return turn;
    }

    /**
     * @return This is the timestamp of the message.
     */
    @JsonProperty("timestamp")
    public Optional<Double> getTimestamp() {
        return timestamp;
    }

    /**
     * @return This is the call that the message is associated with.
     */
    @JsonProperty("call")
    public Optional<Call> getCall() {
        return call;
    }

    /**
     * @return This is the customer that the message is associated with.
     */
    @JsonProperty("customer")
    public Optional<CreateCustomerDto> getCustomer() {
        return customer;
    }

    /**
     * @return This is the assistant that the message is associated with.
     */
    @JsonProperty("assistant")
    public Optional<CreateAssistantDto> getAssistant() {
        return assistant;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClientMessageSpeechUpdate && equalTo((ClientMessageSpeechUpdate) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClientMessageSpeechUpdate other) {
        return phoneNumber.equals(other.phoneNumber)
                && status.equals(other.status)
                && role.equals(other.role)
                && turn.equals(other.turn)
                && timestamp.equals(other.timestamp)
                && call.equals(other.call)
                && customer.equals(other.customer)
                && assistant.equals(other.assistant);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.phoneNumber,
                this.status,
                this.role,
                this.turn,
                this.timestamp,
                this.call,
                this.customer,
                this.assistant);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static StatusStage builder() {
        return new Builder();
    }

    public interface StatusStage {
        /**
         * <p>This is the status of the speech update.</p>
         */
        RoleStage status(@NotNull ClientMessageSpeechUpdateStatus status);

        Builder from(ClientMessageSpeechUpdate other);
    }

    public interface RoleStage {
        /**
         * <p>This is the role which the speech update is for.</p>
         */
        _FinalStage role(@NotNull ClientMessageSpeechUpdateRole role);
    }

    public interface _FinalStage {
        ClientMessageSpeechUpdate build();

        /**
         * <p>This is the phone number that the message is associated with.</p>
         */
        _FinalStage phoneNumber(Optional<ClientMessageSpeechUpdatePhoneNumber> phoneNumber);

        _FinalStage phoneNumber(ClientMessageSpeechUpdatePhoneNumber phoneNumber);

        /**
         * <p>This is the turn number of the speech update (0-indexed).</p>
         */
        _FinalStage turn(Optional<Double> turn);

        _FinalStage turn(Double turn);

        /**
         * <p>This is the timestamp of the message.</p>
         */
        _FinalStage timestamp(Optional<Double> timestamp);

        _FinalStage timestamp(Double timestamp);

        /**
         * <p>This is the call that the message is associated with.</p>
         */
        _FinalStage call(Optional<Call> call);

        _FinalStage call(Call call);

        /**
         * <p>This is the customer that the message is associated with.</p>
         */
        _FinalStage customer(Optional<CreateCustomerDto> customer);

        _FinalStage customer(CreateCustomerDto customer);

        /**
         * <p>This is the assistant that the message is associated with.</p>
         */
        _FinalStage assistant(Optional<CreateAssistantDto> assistant);

        _FinalStage assistant(CreateAssistantDto assistant);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements StatusStage, RoleStage, _FinalStage {
        private ClientMessageSpeechUpdateStatus status;

        private ClientMessageSpeechUpdateRole role;

        private Optional<CreateAssistantDto> assistant = Optional.empty();

        private Optional<CreateCustomerDto> customer = Optional.empty();

        private Optional<Call> call = Optional.empty();

        private Optional<Double> timestamp = Optional.empty();

        private Optional<Double> turn = Optional.empty();

        private Optional<ClientMessageSpeechUpdatePhoneNumber> phoneNumber = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ClientMessageSpeechUpdate other) {
            phoneNumber(other.getPhoneNumber());
            status(other.getStatus());
            role(other.getRole());
            turn(other.getTurn());
            timestamp(other.getTimestamp());
            call(other.getCall());
            customer(other.getCustomer());
            assistant(other.getAssistant());
            return this;
        }

        /**
         * <p>This is the status of the speech update.</p>
         * <p>This is the status of the speech update.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("status")
        public RoleStage status(@NotNull ClientMessageSpeechUpdateStatus status) {
            this.status = Objects.requireNonNull(status, "status must not be null");
            return this;
        }

        /**
         * <p>This is the role which the speech update is for.</p>
         * <p>This is the role which the speech update is for.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("role")
        public _FinalStage role(@NotNull ClientMessageSpeechUpdateRole role) {
            this.role = Objects.requireNonNull(role, "role must not be null");
            return this;
        }

        /**
         * <p>This is the assistant that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage assistant(CreateAssistantDto assistant) {
            this.assistant = Optional.ofNullable(assistant);
            return this;
        }

        /**
         * <p>This is the assistant that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "assistant", nulls = Nulls.SKIP)
        public _FinalStage assistant(Optional<CreateAssistantDto> assistant) {
            this.assistant = assistant;
            return this;
        }

        /**
         * <p>This is the customer that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage customer(CreateCustomerDto customer) {
            this.customer = Optional.ofNullable(customer);
            return this;
        }

        /**
         * <p>This is the customer that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "customer", nulls = Nulls.SKIP)
        public _FinalStage customer(Optional<CreateCustomerDto> customer) {
            this.customer = customer;
            return this;
        }

        /**
         * <p>This is the call that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage call(Call call) {
            this.call = Optional.ofNullable(call);
            return this;
        }

        /**
         * <p>This is the call that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "call", nulls = Nulls.SKIP)
        public _FinalStage call(Optional<Call> call) {
            this.call = call;
            return this;
        }

        /**
         * <p>This is the timestamp of the message.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage timestamp(Double timestamp) {
            this.timestamp = Optional.ofNullable(timestamp);
            return this;
        }

        /**
         * <p>This is the timestamp of the message.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "timestamp", nulls = Nulls.SKIP)
        public _FinalStage timestamp(Optional<Double> timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * <p>This is the turn number of the speech update (0-indexed).</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage turn(Double turn) {
            this.turn = Optional.ofNullable(turn);
            return this;
        }

        /**
         * <p>This is the turn number of the speech update (0-indexed).</p>
         */
        @java.lang.Override
        @JsonSetter(value = "turn", nulls = Nulls.SKIP)
        public _FinalStage turn(Optional<Double> turn) {
            this.turn = turn;
            return this;
        }

        /**
         * <p>This is the phone number that the message is associated with.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage phoneNumber(ClientMessageSpeechUpdatePhoneNumber phoneNumber) {
            this.phoneNumber = Optional.ofNullable(phoneNumber);
            return this;
        }

        /**
         * <p>This is the phone number that the message is associated with.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "phoneNumber", nulls = Nulls.SKIP)
        public _FinalStage phoneNumber(Optional<ClientMessageSpeechUpdatePhoneNumber> phoneNumber) {
            this.phoneNumber = phoneNumber;
            return this;
        }

        @java.lang.Override
        public ClientMessageSpeechUpdate build() {
            return new ClientMessageSpeechUpdate(
                    phoneNumber, status, role, turn, timestamp, call, customer, assistant, additionalProperties);
        }
    }
}
