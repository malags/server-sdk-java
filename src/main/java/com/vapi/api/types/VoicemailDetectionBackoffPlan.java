/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = VoicemailDetectionBackoffPlan.Builder.class)
public final class VoicemailDetectionBackoffPlan {
    private final Optional<Double> startAtSeconds;

    private final Optional<Double> frequencySeconds;

    private final Optional<Double> maxRetries;

    private final Map<String, Object> additionalProperties;

    private VoicemailDetectionBackoffPlan(
            Optional<Double> startAtSeconds,
            Optional<Double> frequencySeconds,
            Optional<Double> maxRetries,
            Map<String, Object> additionalProperties) {
        this.startAtSeconds = startAtSeconds;
        this.frequencySeconds = frequencySeconds;
        this.maxRetries = maxRetries;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the number of seconds to wait before starting the first retry attempt.
     */
    @JsonProperty("startAtSeconds")
    public Optional<Double> getStartAtSeconds() {
        return startAtSeconds;
    }

    /**
     * @return This is the interval in seconds between retry attempts.
     */
    @JsonProperty("frequencySeconds")
    public Optional<Double> getFrequencySeconds() {
        return frequencySeconds;
    }

    /**
     * @return This is the maximum number of retry attempts before giving up.
     */
    @JsonProperty("maxRetries")
    public Optional<Double> getMaxRetries() {
        return maxRetries;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VoicemailDetectionBackoffPlan && equalTo((VoicemailDetectionBackoffPlan) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VoicemailDetectionBackoffPlan other) {
        return startAtSeconds.equals(other.startAtSeconds)
                && frequencySeconds.equals(other.frequencySeconds)
                && maxRetries.equals(other.maxRetries);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.startAtSeconds, this.frequencySeconds, this.maxRetries);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Double> startAtSeconds = Optional.empty();

        private Optional<Double> frequencySeconds = Optional.empty();

        private Optional<Double> maxRetries = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(VoicemailDetectionBackoffPlan other) {
            startAtSeconds(other.getStartAtSeconds());
            frequencySeconds(other.getFrequencySeconds());
            maxRetries(other.getMaxRetries());
            return this;
        }

        /**
         * <p>This is the number of seconds to wait before starting the first retry attempt.</p>
         */
        @JsonSetter(value = "startAtSeconds", nulls = Nulls.SKIP)
        public Builder startAtSeconds(Optional<Double> startAtSeconds) {
            this.startAtSeconds = startAtSeconds;
            return this;
        }

        public Builder startAtSeconds(Double startAtSeconds) {
            this.startAtSeconds = Optional.ofNullable(startAtSeconds);
            return this;
        }

        /**
         * <p>This is the interval in seconds between retry attempts.</p>
         */
        @JsonSetter(value = "frequencySeconds", nulls = Nulls.SKIP)
        public Builder frequencySeconds(Optional<Double> frequencySeconds) {
            this.frequencySeconds = frequencySeconds;
            return this;
        }

        public Builder frequencySeconds(Double frequencySeconds) {
            this.frequencySeconds = Optional.ofNullable(frequencySeconds);
            return this;
        }

        /**
         * <p>This is the maximum number of retry attempts before giving up.</p>
         */
        @JsonSetter(value = "maxRetries", nulls = Nulls.SKIP)
        public Builder maxRetries(Optional<Double> maxRetries) {
            this.maxRetries = maxRetries;
            return this;
        }

        public Builder maxRetries(Double maxRetries) {
            this.maxRetries = Optional.ofNullable(maxRetries);
            return this;
        }

        public VoicemailDetectionBackoffPlan build() {
            return new VoicemailDetectionBackoffPlan(
                    startAtSeconds, frequencySeconds, maxRetries, additionalProperties);
        }
    }
}
