/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CallLogPrivileged.Builder.class)
public final class CallLogPrivileged {
    private final String callId;

    private final String orgId;

    private final String log;

    private final CallLogPrivilegedLevel level;

    private final OffsetDateTime time;

    private final Map<String, Object> additionalProperties;

    private CallLogPrivileged(
            String callId,
            String orgId,
            String log,
            CallLogPrivilegedLevel level,
            OffsetDateTime time,
            Map<String, Object> additionalProperties) {
        this.callId = callId;
        this.orgId = orgId;
        this.log = log;
        this.level = level;
        this.time = time;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the unique identifier for the call.
     */
    @JsonProperty("callId")
    public String getCallId() {
        return callId;
    }

    /**
     * @return This is the unique identifier for the org that this call log belongs to.
     */
    @JsonProperty("orgId")
    public String getOrgId() {
        return orgId;
    }

    /**
     * @return This is the log message associated with the call.
     */
    @JsonProperty("log")
    public String getLog() {
        return log;
    }

    /**
     * @return This is the level of the log message.
     */
    @JsonProperty("level")
    public CallLogPrivilegedLevel getLevel() {
        return level;
    }

    /**
     * @return This is the ISO 8601 date-time string of when the log was created.
     */
    @JsonProperty("time")
    public OffsetDateTime getTime() {
        return time;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CallLogPrivileged && equalTo((CallLogPrivileged) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CallLogPrivileged other) {
        return callId.equals(other.callId)
                && orgId.equals(other.orgId)
                && log.equals(other.log)
                && level.equals(other.level)
                && time.equals(other.time);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.callId, this.orgId, this.log, this.level, this.time);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static CallIdStage builder() {
        return new Builder();
    }

    public interface CallIdStage {
        /**
         * <p>This is the unique identifier for the call.</p>
         */
        OrgIdStage callId(@NotNull String callId);

        Builder from(CallLogPrivileged other);
    }

    public interface OrgIdStage {
        /**
         * <p>This is the unique identifier for the org that this call log belongs to.</p>
         */
        LogStage orgId(@NotNull String orgId);
    }

    public interface LogStage {
        /**
         * <p>This is the log message associated with the call.</p>
         */
        LevelStage log(@NotNull String log);
    }

    public interface LevelStage {
        /**
         * <p>This is the level of the log message.</p>
         */
        TimeStage level(@NotNull CallLogPrivilegedLevel level);
    }

    public interface TimeStage {
        /**
         * <p>This is the ISO 8601 date-time string of when the log was created.</p>
         */
        _FinalStage time(@NotNull OffsetDateTime time);
    }

    public interface _FinalStage {
        CallLogPrivileged build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements CallIdStage, OrgIdStage, LogStage, LevelStage, TimeStage, _FinalStage {
        private String callId;

        private String orgId;

        private String log;

        private CallLogPrivilegedLevel level;

        private OffsetDateTime time;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CallLogPrivileged other) {
            callId(other.getCallId());
            orgId(other.getOrgId());
            log(other.getLog());
            level(other.getLevel());
            time(other.getTime());
            return this;
        }

        /**
         * <p>This is the unique identifier for the call.</p>
         * <p>This is the unique identifier for the call.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("callId")
        public OrgIdStage callId(@NotNull String callId) {
            this.callId = Objects.requireNonNull(callId, "callId must not be null");
            return this;
        }

        /**
         * <p>This is the unique identifier for the org that this call log belongs to.</p>
         * <p>This is the unique identifier for the org that this call log belongs to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("orgId")
        public LogStage orgId(@NotNull String orgId) {
            this.orgId = Objects.requireNonNull(orgId, "orgId must not be null");
            return this;
        }

        /**
         * <p>This is the log message associated with the call.</p>
         * <p>This is the log message associated with the call.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("log")
        public LevelStage log(@NotNull String log) {
            this.log = Objects.requireNonNull(log, "log must not be null");
            return this;
        }

        /**
         * <p>This is the level of the log message.</p>
         * <p>This is the level of the log message.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("level")
        public TimeStage level(@NotNull CallLogPrivilegedLevel level) {
            this.level = Objects.requireNonNull(level, "level must not be null");
            return this;
        }

        /**
         * <p>This is the ISO 8601 date-time string of when the log was created.</p>
         * <p>This is the ISO 8601 date-time string of when the log was created.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("time")
        public _FinalStage time(@NotNull OffsetDateTime time) {
            this.time = Objects.requireNonNull(time, "time must not be null");
            return this;
        }

        @java.lang.Override
        public CallLogPrivileged build() {
            return new CallLogPrivileged(callId, orgId, log, level, time, additionalProperties);
        }
    }
}
