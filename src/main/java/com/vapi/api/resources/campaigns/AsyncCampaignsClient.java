/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.resources.campaigns;

import com.vapi.api.core.ClientOptions;
import com.vapi.api.core.RequestOptions;
import com.vapi.api.resources.campaigns.requests.CampaignControllerFindAllRequest;
import com.vapi.api.resources.campaigns.requests.CreateCampaignDto;
import com.vapi.api.resources.campaigns.requests.UpdateCampaignDto;
import com.vapi.api.types.Campaign;
import com.vapi.api.types.CampaignPaginatedResponse;
import java.util.concurrent.CompletableFuture;

public class AsyncCampaignsClient {
    protected final ClientOptions clientOptions;

    private final AsyncRawCampaignsClient rawClient;

    public AsyncCampaignsClient(ClientOptions clientOptions) {
        this.clientOptions = clientOptions;
        this.rawClient = new AsyncRawCampaignsClient(clientOptions);
    }

    /**
     * Get responses with HTTP metadata like headers
     */
    public AsyncRawCampaignsClient withRawResponse() {
        return this.rawClient;
    }

    public CompletableFuture<CampaignPaginatedResponse> campaignControllerFindAll() {
        return this.rawClient.campaignControllerFindAll().thenApply(response -> response.body());
    }

    public CompletableFuture<CampaignPaginatedResponse> campaignControllerFindAll(
            CampaignControllerFindAllRequest request) {
        return this.rawClient.campaignControllerFindAll(request).thenApply(response -> response.body());
    }

    public CompletableFuture<CampaignPaginatedResponse> campaignControllerFindAll(
            CampaignControllerFindAllRequest request, RequestOptions requestOptions) {
        return this.rawClient.campaignControllerFindAll(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerCreate(CreateCampaignDto request) {
        return this.rawClient.campaignControllerCreate(request).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerCreate(
            CreateCampaignDto request, RequestOptions requestOptions) {
        return this.rawClient.campaignControllerCreate(request, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerFindOne(String id) {
        return this.rawClient.campaignControllerFindOne(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerFindOne(String id, RequestOptions requestOptions) {
        return this.rawClient.campaignControllerFindOne(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerRemove(String id) {
        return this.rawClient.campaignControllerRemove(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerRemove(String id, RequestOptions requestOptions) {
        return this.rawClient.campaignControllerRemove(id, requestOptions).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerUpdate(String id) {
        return this.rawClient.campaignControllerUpdate(id).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerUpdate(String id, UpdateCampaignDto request) {
        return this.rawClient.campaignControllerUpdate(id, request).thenApply(response -> response.body());
    }

    public CompletableFuture<Campaign> campaignControllerUpdate(
            String id, UpdateCampaignDto request, RequestOptions requestOptions) {
        return this.rawClient
                .campaignControllerUpdate(id, request, requestOptions)
                .thenApply(response -> response.body());
    }
}
