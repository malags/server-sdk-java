/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TestSuiteRunTestResult.Builder.class)
public final class TestSuiteRunTestResult {
    private final TestSuiteTestVoice test;

    private final List<TestSuiteRunTestAttempt> attempts;

    private final Map<String, Object> additionalProperties;

    private TestSuiteRunTestResult(
            TestSuiteTestVoice test, List<TestSuiteRunTestAttempt> attempts, Map<String, Object> additionalProperties) {
        this.test = test;
        this.attempts = attempts;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the test that was run.
     */
    @JsonProperty("test")
    public TestSuiteTestVoice getTest() {
        return test;
    }

    /**
     * @return These are the attempts made for this test.
     */
    @JsonProperty("attempts")
    public List<TestSuiteRunTestAttempt> getAttempts() {
        return attempts;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TestSuiteRunTestResult && equalTo((TestSuiteRunTestResult) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TestSuiteRunTestResult other) {
        return test.equals(other.test) && attempts.equals(other.attempts);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.test, this.attempts);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TestStage builder() {
        return new Builder();
    }

    public interface TestStage {
        /**
         * <p>This is the test that was run.</p>
         */
        _FinalStage test(@NotNull TestSuiteTestVoice test);

        Builder from(TestSuiteRunTestResult other);
    }

    public interface _FinalStage {
        TestSuiteRunTestResult build();

        /**
         * <p>These are the attempts made for this test.</p>
         */
        _FinalStage attempts(List<TestSuiteRunTestAttempt> attempts);

        _FinalStage addAttempts(TestSuiteRunTestAttempt attempts);

        _FinalStage addAllAttempts(List<TestSuiteRunTestAttempt> attempts);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements TestStage, _FinalStage {
        private TestSuiteTestVoice test;

        private List<TestSuiteRunTestAttempt> attempts = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TestSuiteRunTestResult other) {
            test(other.getTest());
            attempts(other.getAttempts());
            return this;
        }

        /**
         * <p>This is the test that was run.</p>
         * <p>This is the test that was run.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("test")
        public _FinalStage test(@NotNull TestSuiteTestVoice test) {
            this.test = Objects.requireNonNull(test, "test must not be null");
            return this;
        }

        /**
         * <p>These are the attempts made for this test.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllAttempts(List<TestSuiteRunTestAttempt> attempts) {
            this.attempts.addAll(attempts);
            return this;
        }

        /**
         * <p>These are the attempts made for this test.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAttempts(TestSuiteRunTestAttempt attempts) {
            this.attempts.add(attempts);
            return this;
        }

        /**
         * <p>These are the attempts made for this test.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "attempts", nulls = Nulls.SKIP)
        public _FinalStage attempts(List<TestSuiteRunTestAttempt> attempts) {
            this.attempts.clear();
            this.attempts.addAll(attempts);
            return this;
        }

        @java.lang.Override
        public TestSuiteRunTestResult build() {
            return new TestSuiteRunTestResult(test, attempts, additionalProperties);
        }
    }
}
