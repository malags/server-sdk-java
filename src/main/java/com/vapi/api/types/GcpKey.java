/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = GcpKey.Builder.class)
public final class GcpKey {
    private final String type;

    private final String projectId;

    private final String privateKeyId;

    private final String privateKey;

    private final String clientEmail;

    private final String clientId;

    private final String authUri;

    private final String tokenUri;

    private final String authProviderX509CertUrl;

    private final String clientX509CertUrl;

    private final String universeDomain;

    private final Map<String, Object> additionalProperties;

    private GcpKey(
            String type,
            String projectId,
            String privateKeyId,
            String privateKey,
            String clientEmail,
            String clientId,
            String authUri,
            String tokenUri,
            String authProviderX509CertUrl,
            String clientX509CertUrl,
            String universeDomain,
            Map<String, Object> additionalProperties) {
        this.type = type;
        this.projectId = projectId;
        this.privateKeyId = privateKeyId;
        this.privateKey = privateKey;
        this.clientEmail = clientEmail;
        this.clientId = clientId;
        this.authUri = authUri;
        this.tokenUri = tokenUri;
        this.authProviderX509CertUrl = authProviderX509CertUrl;
        this.clientX509CertUrl = clientX509CertUrl;
        this.universeDomain = universeDomain;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the type of the key. Most likely, this is &quot;service_account&quot;.
     */
    @JsonProperty("type")
    public String getType() {
        return type;
    }

    /**
     * @return This is the ID of the Google Cloud project associated with this key.
     */
    @JsonProperty("projectId")
    public String getProjectId() {
        return projectId;
    }

    /**
     * @return This is the unique identifier for the private key.
     */
    @JsonProperty("privateKeyId")
    public String getPrivateKeyId() {
        return privateKeyId;
    }

    /**
     * @return This is the private key in PEM format.
     * <p>Note: This is not returned in the API.</p>
     */
    @JsonProperty("privateKey")
    public String getPrivateKey() {
        return privateKey;
    }

    /**
     * @return This is the email address associated with the service account.
     */
    @JsonProperty("clientEmail")
    public String getClientEmail() {
        return clientEmail;
    }

    /**
     * @return This is the unique identifier for the client.
     */
    @JsonProperty("clientId")
    public String getClientId() {
        return clientId;
    }

    /**
     * @return This is the URI for the auth provider's authorization endpoint.
     */
    @JsonProperty("authUri")
    public String getAuthUri() {
        return authUri;
    }

    /**
     * @return This is the URI for the auth provider's token endpoint.
     */
    @JsonProperty("tokenUri")
    public String getTokenUri() {
        return tokenUri;
    }

    /**
     * @return This is the URL of the public x509 certificate for the auth provider.
     */
    @JsonProperty("authProviderX509CertUrl")
    public String getAuthProviderX509CertUrl() {
        return authProviderX509CertUrl;
    }

    /**
     * @return This is the URL of the public x509 certificate for the client.
     */
    @JsonProperty("clientX509CertUrl")
    public String getClientX509CertUrl() {
        return clientX509CertUrl;
    }

    /**
     * @return This is the domain associated with the universe this service account belongs to.
     */
    @JsonProperty("universeDomain")
    public String getUniverseDomain() {
        return universeDomain;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GcpKey && equalTo((GcpKey) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GcpKey other) {
        return type.equals(other.type)
                && projectId.equals(other.projectId)
                && privateKeyId.equals(other.privateKeyId)
                && privateKey.equals(other.privateKey)
                && clientEmail.equals(other.clientEmail)
                && clientId.equals(other.clientId)
                && authUri.equals(other.authUri)
                && tokenUri.equals(other.tokenUri)
                && authProviderX509CertUrl.equals(other.authProviderX509CertUrl)
                && clientX509CertUrl.equals(other.clientX509CertUrl)
                && universeDomain.equals(other.universeDomain);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.type,
                this.projectId,
                this.privateKeyId,
                this.privateKey,
                this.clientEmail,
                this.clientId,
                this.authUri,
                this.tokenUri,
                this.authProviderX509CertUrl,
                this.clientX509CertUrl,
                this.universeDomain);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static TypeStage builder() {
        return new Builder();
    }

    public interface TypeStage {
        /**
         * <p>This is the type of the key. Most likely, this is &quot;service_account&quot;.</p>
         */
        ProjectIdStage type(@NotNull String type);

        Builder from(GcpKey other);
    }

    public interface ProjectIdStage {
        /**
         * <p>This is the ID of the Google Cloud project associated with this key.</p>
         */
        PrivateKeyIdStage projectId(@NotNull String projectId);
    }

    public interface PrivateKeyIdStage {
        /**
         * <p>This is the unique identifier for the private key.</p>
         */
        PrivateKeyStage privateKeyId(@NotNull String privateKeyId);
    }

    public interface PrivateKeyStage {
        /**
         * <p>This is the private key in PEM format.</p>
         * <p>Note: This is not returned in the API.</p>
         */
        ClientEmailStage privateKey(@NotNull String privateKey);
    }

    public interface ClientEmailStage {
        /**
         * <p>This is the email address associated with the service account.</p>
         */
        ClientIdStage clientEmail(@NotNull String clientEmail);
    }

    public interface ClientIdStage {
        /**
         * <p>This is the unique identifier for the client.</p>
         */
        AuthUriStage clientId(@NotNull String clientId);
    }

    public interface AuthUriStage {
        /**
         * <p>This is the URI for the auth provider's authorization endpoint.</p>
         */
        TokenUriStage authUri(@NotNull String authUri);
    }

    public interface TokenUriStage {
        /**
         * <p>This is the URI for the auth provider's token endpoint.</p>
         */
        AuthProviderX509CertUrlStage tokenUri(@NotNull String tokenUri);
    }

    public interface AuthProviderX509CertUrlStage {
        /**
         * <p>This is the URL of the public x509 certificate for the auth provider.</p>
         */
        ClientX509CertUrlStage authProviderX509CertUrl(@NotNull String authProviderX509CertUrl);
    }

    public interface ClientX509CertUrlStage {
        /**
         * <p>This is the URL of the public x509 certificate for the client.</p>
         */
        UniverseDomainStage clientX509CertUrl(@NotNull String clientX509CertUrl);
    }

    public interface UniverseDomainStage {
        /**
         * <p>This is the domain associated with the universe this service account belongs to.</p>
         */
        _FinalStage universeDomain(@NotNull String universeDomain);
    }

    public interface _FinalStage {
        GcpKey build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements TypeStage,
                    ProjectIdStage,
                    PrivateKeyIdStage,
                    PrivateKeyStage,
                    ClientEmailStage,
                    ClientIdStage,
                    AuthUriStage,
                    TokenUriStage,
                    AuthProviderX509CertUrlStage,
                    ClientX509CertUrlStage,
                    UniverseDomainStage,
                    _FinalStage {
        private String type;

        private String projectId;

        private String privateKeyId;

        private String privateKey;

        private String clientEmail;

        private String clientId;

        private String authUri;

        private String tokenUri;

        private String authProviderX509CertUrl;

        private String clientX509CertUrl;

        private String universeDomain;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(GcpKey other) {
            type(other.getType());
            projectId(other.getProjectId());
            privateKeyId(other.getPrivateKeyId());
            privateKey(other.getPrivateKey());
            clientEmail(other.getClientEmail());
            clientId(other.getClientId());
            authUri(other.getAuthUri());
            tokenUri(other.getTokenUri());
            authProviderX509CertUrl(other.getAuthProviderX509CertUrl());
            clientX509CertUrl(other.getClientX509CertUrl());
            universeDomain(other.getUniverseDomain());
            return this;
        }

        /**
         * <p>This is the type of the key. Most likely, this is &quot;service_account&quot;.</p>
         * <p>This is the type of the key. Most likely, this is &quot;service_account&quot;.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("type")
        public ProjectIdStage type(@NotNull String type) {
            this.type = Objects.requireNonNull(type, "type must not be null");
            return this;
        }

        /**
         * <p>This is the ID of the Google Cloud project associated with this key.</p>
         * <p>This is the ID of the Google Cloud project associated with this key.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("projectId")
        public PrivateKeyIdStage projectId(@NotNull String projectId) {
            this.projectId = Objects.requireNonNull(projectId, "projectId must not be null");
            return this;
        }

        /**
         * <p>This is the unique identifier for the private key.</p>
         * <p>This is the unique identifier for the private key.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("privateKeyId")
        public PrivateKeyStage privateKeyId(@NotNull String privateKeyId) {
            this.privateKeyId = Objects.requireNonNull(privateKeyId, "privateKeyId must not be null");
            return this;
        }

        /**
         * <p>This is the private key in PEM format.</p>
         * <p>Note: This is not returned in the API.</p>
         * <p>This is the private key in PEM format.</p>
         * <p>Note: This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("privateKey")
        public ClientEmailStage privateKey(@NotNull String privateKey) {
            this.privateKey = Objects.requireNonNull(privateKey, "privateKey must not be null");
            return this;
        }

        /**
         * <p>This is the email address associated with the service account.</p>
         * <p>This is the email address associated with the service account.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("clientEmail")
        public ClientIdStage clientEmail(@NotNull String clientEmail) {
            this.clientEmail = Objects.requireNonNull(clientEmail, "clientEmail must not be null");
            return this;
        }

        /**
         * <p>This is the unique identifier for the client.</p>
         * <p>This is the unique identifier for the client.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("clientId")
        public AuthUriStage clientId(@NotNull String clientId) {
            this.clientId = Objects.requireNonNull(clientId, "clientId must not be null");
            return this;
        }

        /**
         * <p>This is the URI for the auth provider's authorization endpoint.</p>
         * <p>This is the URI for the auth provider's authorization endpoint.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("authUri")
        public TokenUriStage authUri(@NotNull String authUri) {
            this.authUri = Objects.requireNonNull(authUri, "authUri must not be null");
            return this;
        }

        /**
         * <p>This is the URI for the auth provider's token endpoint.</p>
         * <p>This is the URI for the auth provider's token endpoint.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("tokenUri")
        public AuthProviderX509CertUrlStage tokenUri(@NotNull String tokenUri) {
            this.tokenUri = Objects.requireNonNull(tokenUri, "tokenUri must not be null");
            return this;
        }

        /**
         * <p>This is the URL of the public x509 certificate for the auth provider.</p>
         * <p>This is the URL of the public x509 certificate for the auth provider.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("authProviderX509CertUrl")
        public ClientX509CertUrlStage authProviderX509CertUrl(@NotNull String authProviderX509CertUrl) {
            this.authProviderX509CertUrl =
                    Objects.requireNonNull(authProviderX509CertUrl, "authProviderX509CertUrl must not be null");
            return this;
        }

        /**
         * <p>This is the URL of the public x509 certificate for the client.</p>
         * <p>This is the URL of the public x509 certificate for the client.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("clientX509CertUrl")
        public UniverseDomainStage clientX509CertUrl(@NotNull String clientX509CertUrl) {
            this.clientX509CertUrl = Objects.requireNonNull(clientX509CertUrl, "clientX509CertUrl must not be null");
            return this;
        }

        /**
         * <p>This is the domain associated with the universe this service account belongs to.</p>
         * <p>This is the domain associated with the universe this service account belongs to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("universeDomain")
        public _FinalStage universeDomain(@NotNull String universeDomain) {
            this.universeDomain = Objects.requireNonNull(universeDomain, "universeDomain must not be null");
            return this;
        }

        @java.lang.Override
        public GcpKey build() {
            return new GcpKey(
                    type,
                    projectId,
                    privateKeyId,
                    privateKey,
                    clientEmail,
                    clientId,
                    authUri,
                    tokenUri,
                    authProviderX509CertUrl,
                    clientX509CertUrl,
                    universeDomain,
                    additionalProperties);
        }
    }
}
