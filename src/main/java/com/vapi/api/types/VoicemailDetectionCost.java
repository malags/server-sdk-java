/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = VoicemailDetectionCost.Builder.class)
public final class VoicemailDetectionCost {
    private final Map<String, Object> model;

    private final VoicemailDetectionCostProvider provider;

    private final double promptTextTokens;

    private final double promptAudioTokens;

    private final double completionTextTokens;

    private final double completionAudioTokens;

    private final double cost;

    private final Map<String, Object> additionalProperties;

    private VoicemailDetectionCost(
            Map<String, Object> model,
            VoicemailDetectionCostProvider provider,
            double promptTextTokens,
            double promptAudioTokens,
            double completionTextTokens,
            double completionAudioTokens,
            double cost,
            Map<String, Object> additionalProperties) {
        this.model = model;
        this.provider = provider;
        this.promptTextTokens = promptTextTokens;
        this.promptAudioTokens = promptAudioTokens;
        this.completionTextTokens = completionTextTokens;
        this.completionAudioTokens = completionAudioTokens;
        this.cost = cost;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the model that was used to perform the analysis.
     */
    @JsonProperty("model")
    public Map<String, Object> getModel() {
        return model;
    }

    /**
     * @return This is the provider that was used to detect the voicemail.
     */
    @JsonProperty("provider")
    public VoicemailDetectionCostProvider getProvider() {
        return provider;
    }

    /**
     * @return This is the number of prompt text tokens used in the voicemail detection.
     */
    @JsonProperty("promptTextTokens")
    public double getPromptTextTokens() {
        return promptTextTokens;
    }

    /**
     * @return This is the number of prompt audio tokens used in the voicemail detection.
     */
    @JsonProperty("promptAudioTokens")
    public double getPromptAudioTokens() {
        return promptAudioTokens;
    }

    /**
     * @return This is the number of completion text tokens used in the voicemail detection.
     */
    @JsonProperty("completionTextTokens")
    public double getCompletionTextTokens() {
        return completionTextTokens;
    }

    /**
     * @return This is the number of completion audio tokens used in the voicemail detection.
     */
    @JsonProperty("completionAudioTokens")
    public double getCompletionAudioTokens() {
        return completionAudioTokens;
    }

    /**
     * @return This is the cost of the component in USD.
     */
    @JsonProperty("cost")
    public double getCost() {
        return cost;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VoicemailDetectionCost && equalTo((VoicemailDetectionCost) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VoicemailDetectionCost other) {
        return model.equals(other.model)
                && provider.equals(other.provider)
                && promptTextTokens == other.promptTextTokens
                && promptAudioTokens == other.promptAudioTokens
                && completionTextTokens == other.completionTextTokens
                && completionAudioTokens == other.completionAudioTokens
                && cost == other.cost;
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.model,
                this.provider,
                this.promptTextTokens,
                this.promptAudioTokens,
                this.completionTextTokens,
                this.completionAudioTokens,
                this.cost);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ProviderStage builder() {
        return new Builder();
    }

    public interface ProviderStage {
        /**
         * <p>This is the provider that was used to detect the voicemail.</p>
         */
        PromptTextTokensStage provider(@NotNull VoicemailDetectionCostProvider provider);

        Builder from(VoicemailDetectionCost other);
    }

    public interface PromptTextTokensStage {
        /**
         * <p>This is the number of prompt text tokens used in the voicemail detection.</p>
         */
        PromptAudioTokensStage promptTextTokens(double promptTextTokens);
    }

    public interface PromptAudioTokensStage {
        /**
         * <p>This is the number of prompt audio tokens used in the voicemail detection.</p>
         */
        CompletionTextTokensStage promptAudioTokens(double promptAudioTokens);
    }

    public interface CompletionTextTokensStage {
        /**
         * <p>This is the number of completion text tokens used in the voicemail detection.</p>
         */
        CompletionAudioTokensStage completionTextTokens(double completionTextTokens);
    }

    public interface CompletionAudioTokensStage {
        /**
         * <p>This is the number of completion audio tokens used in the voicemail detection.</p>
         */
        CostStage completionAudioTokens(double completionAudioTokens);
    }

    public interface CostStage {
        /**
         * <p>This is the cost of the component in USD.</p>
         */
        _FinalStage cost(double cost);
    }

    public interface _FinalStage {
        VoicemailDetectionCost build();

        /**
         * <p>This is the model that was used to perform the analysis.</p>
         */
        _FinalStage model(Map<String, Object> model);

        _FinalStage putAllModel(Map<String, Object> model);

        _FinalStage model(String key, Object value);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements ProviderStage,
                    PromptTextTokensStage,
                    PromptAudioTokensStage,
                    CompletionTextTokensStage,
                    CompletionAudioTokensStage,
                    CostStage,
                    _FinalStage {
        private VoicemailDetectionCostProvider provider;

        private double promptTextTokens;

        private double promptAudioTokens;

        private double completionTextTokens;

        private double completionAudioTokens;

        private double cost;

        private Map<String, Object> model = new LinkedHashMap<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(VoicemailDetectionCost other) {
            model(other.getModel());
            provider(other.getProvider());
            promptTextTokens(other.getPromptTextTokens());
            promptAudioTokens(other.getPromptAudioTokens());
            completionTextTokens(other.getCompletionTextTokens());
            completionAudioTokens(other.getCompletionAudioTokens());
            cost(other.getCost());
            return this;
        }

        /**
         * <p>This is the provider that was used to detect the voicemail.</p>
         * <p>This is the provider that was used to detect the voicemail.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("provider")
        public PromptTextTokensStage provider(@NotNull VoicemailDetectionCostProvider provider) {
            this.provider = Objects.requireNonNull(provider, "provider must not be null");
            return this;
        }

        /**
         * <p>This is the number of prompt text tokens used in the voicemail detection.</p>
         * <p>This is the number of prompt text tokens used in the voicemail detection.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("promptTextTokens")
        public PromptAudioTokensStage promptTextTokens(double promptTextTokens) {
            this.promptTextTokens = promptTextTokens;
            return this;
        }

        /**
         * <p>This is the number of prompt audio tokens used in the voicemail detection.</p>
         * <p>This is the number of prompt audio tokens used in the voicemail detection.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("promptAudioTokens")
        public CompletionTextTokensStage promptAudioTokens(double promptAudioTokens) {
            this.promptAudioTokens = promptAudioTokens;
            return this;
        }

        /**
         * <p>This is the number of completion text tokens used in the voicemail detection.</p>
         * <p>This is the number of completion text tokens used in the voicemail detection.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("completionTextTokens")
        public CompletionAudioTokensStage completionTextTokens(double completionTextTokens) {
            this.completionTextTokens = completionTextTokens;
            return this;
        }

        /**
         * <p>This is the number of completion audio tokens used in the voicemail detection.</p>
         * <p>This is the number of completion audio tokens used in the voicemail detection.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("completionAudioTokens")
        public CostStage completionAudioTokens(double completionAudioTokens) {
            this.completionAudioTokens = completionAudioTokens;
            return this;
        }

        /**
         * <p>This is the cost of the component in USD.</p>
         * <p>This is the cost of the component in USD.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("cost")
        public _FinalStage cost(double cost) {
            this.cost = cost;
            return this;
        }

        /**
         * <p>This is the model that was used to perform the analysis.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage model(String key, Object value) {
            this.model.put(key, value);
            return this;
        }

        /**
         * <p>This is the model that was used to perform the analysis.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage putAllModel(Map<String, Object> model) {
            this.model.putAll(model);
            return this;
        }

        /**
         * <p>This is the model that was used to perform the analysis.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "model", nulls = Nulls.SKIP)
        public _FinalStage model(Map<String, Object> model) {
            this.model.clear();
            this.model.putAll(model);
            return this;
        }

        @java.lang.Override
        public VoicemailDetectionCost build() {
            return new VoicemailDetectionCost(
                    model,
                    provider,
                    promptTextTokens,
                    promptAudioTokens,
                    completionTextTokens,
                    completionAudioTokens,
                    cost,
                    additionalProperties);
        }
    }
}
