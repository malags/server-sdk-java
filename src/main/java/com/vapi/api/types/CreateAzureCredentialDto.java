/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateAzureCredentialDto.Builder.class)
public final class CreateAzureCredentialDto {
    private final CreateAzureCredentialDtoService service;

    private final Optional<CreateAzureCredentialDtoRegion> region;

    private final Optional<String> apiKey;

    private final Optional<Double> fallbackIndex;

    private final Optional<AzureBlobStorageBucketPlan> bucketPlan;

    private final Optional<String> name;

    private final Map<String, Object> additionalProperties;

    private CreateAzureCredentialDto(
            CreateAzureCredentialDtoService service,
            Optional<CreateAzureCredentialDtoRegion> region,
            Optional<String> apiKey,
            Optional<Double> fallbackIndex,
            Optional<AzureBlobStorageBucketPlan> bucketPlan,
            Optional<String> name,
            Map<String, Object> additionalProperties) {
        this.service = service;
        this.region = region;
        this.apiKey = apiKey;
        this.fallbackIndex = fallbackIndex;
        this.bucketPlan = bucketPlan;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the service being used in Azure.
     */
    @JsonProperty("service")
    public CreateAzureCredentialDtoService getService() {
        return service;
    }

    /**
     * @return This is the region of the Azure resource.
     */
    @JsonProperty("region")
    public Optional<CreateAzureCredentialDtoRegion> getRegion() {
        return region;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiKey")
    public Optional<String> getApiKey() {
        return apiKey;
    }

    /**
     * @return This is the order in which this storage provider is tried during upload retries. Lower numbers are tried first in increasing order.
     */
    @JsonProperty("fallbackIndex")
    public Optional<Double> getFallbackIndex() {
        return fallbackIndex;
    }

    /**
     * @return This is the bucket plan that can be provided to store call artifacts in Azure Blob Storage.
     */
    @JsonProperty("bucketPlan")
    public Optional<AzureBlobStorageBucketPlan> getBucketPlan() {
        return bucketPlan;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateAzureCredentialDto && equalTo((CreateAzureCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateAzureCredentialDto other) {
        return service.equals(other.service)
                && region.equals(other.region)
                && apiKey.equals(other.apiKey)
                && fallbackIndex.equals(other.fallbackIndex)
                && bucketPlan.equals(other.bucketPlan)
                && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.service, this.region, this.apiKey, this.fallbackIndex, this.bucketPlan, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ServiceStage builder() {
        return new Builder();
    }

    public interface ServiceStage {
        /**
         * <p>This is the service being used in Azure.</p>
         */
        _FinalStage service(@NotNull CreateAzureCredentialDtoService service);

        Builder from(CreateAzureCredentialDto other);
    }

    public interface _FinalStage {
        CreateAzureCredentialDto build();

        /**
         * <p>This is the region of the Azure resource.</p>
         */
        _FinalStage region(Optional<CreateAzureCredentialDtoRegion> region);

        _FinalStage region(CreateAzureCredentialDtoRegion region);

        /**
         * <p>This is not returned in the API.</p>
         */
        _FinalStage apiKey(Optional<String> apiKey);

        _FinalStage apiKey(String apiKey);

        /**
         * <p>This is the order in which this storage provider is tried during upload retries. Lower numbers are tried first in increasing order.</p>
         */
        _FinalStage fallbackIndex(Optional<Double> fallbackIndex);

        _FinalStage fallbackIndex(Double fallbackIndex);

        /**
         * <p>This is the bucket plan that can be provided to store call artifacts in Azure Blob Storage.</p>
         */
        _FinalStage bucketPlan(Optional<AzureBlobStorageBucketPlan> bucketPlan);

        _FinalStage bucketPlan(AzureBlobStorageBucketPlan bucketPlan);

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        _FinalStage name(Optional<String> name);

        _FinalStage name(String name);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ServiceStage, _FinalStage {
        private CreateAzureCredentialDtoService service;

        private Optional<String> name = Optional.empty();

        private Optional<AzureBlobStorageBucketPlan> bucketPlan = Optional.empty();

        private Optional<Double> fallbackIndex = Optional.empty();

        private Optional<String> apiKey = Optional.empty();

        private Optional<CreateAzureCredentialDtoRegion> region = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateAzureCredentialDto other) {
            service(other.getService());
            region(other.getRegion());
            apiKey(other.getApiKey());
            fallbackIndex(other.getFallbackIndex());
            bucketPlan(other.getBucketPlan());
            name(other.getName());
            return this;
        }

        /**
         * <p>This is the service being used in Azure.</p>
         * <p>This is the service being used in Azure.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("service")
        public _FinalStage service(@NotNull CreateAzureCredentialDtoService service) {
            this.service = Objects.requireNonNull(service, "service must not be null");
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(Optional<String> name) {
            this.name = name;
            return this;
        }

        /**
         * <p>This is the bucket plan that can be provided to store call artifacts in Azure Blob Storage.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage bucketPlan(AzureBlobStorageBucketPlan bucketPlan) {
            this.bucketPlan = Optional.ofNullable(bucketPlan);
            return this;
        }

        /**
         * <p>This is the bucket plan that can be provided to store call artifacts in Azure Blob Storage.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "bucketPlan", nulls = Nulls.SKIP)
        public _FinalStage bucketPlan(Optional<AzureBlobStorageBucketPlan> bucketPlan) {
            this.bucketPlan = bucketPlan;
            return this;
        }

        /**
         * <p>This is the order in which this storage provider is tried during upload retries. Lower numbers are tried first in increasing order.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage fallbackIndex(Double fallbackIndex) {
            this.fallbackIndex = Optional.ofNullable(fallbackIndex);
            return this;
        }

        /**
         * <p>This is the order in which this storage provider is tried during upload retries. Lower numbers are tried first in increasing order.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "fallbackIndex", nulls = Nulls.SKIP)
        public _FinalStage fallbackIndex(Optional<Double> fallbackIndex) {
            this.fallbackIndex = fallbackIndex;
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage apiKey(String apiKey) {
            this.apiKey = Optional.ofNullable(apiKey);
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "apiKey", nulls = Nulls.SKIP)
        public _FinalStage apiKey(Optional<String> apiKey) {
            this.apiKey = apiKey;
            return this;
        }

        /**
         * <p>This is the region of the Azure resource.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage region(CreateAzureCredentialDtoRegion region) {
            this.region = Optional.ofNullable(region);
            return this;
        }

        /**
         * <p>This is the region of the Azure resource.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "region", nulls = Nulls.SKIP)
        public _FinalStage region(Optional<CreateAzureCredentialDtoRegion> region) {
            this.region = region;
            return this;
        }

        @java.lang.Override
        public CreateAzureCredentialDto build() {
            return new CreateAzureCredentialDto(
                    service, region, apiKey, fallbackIndex, bucketPlan, name, additionalProperties);
        }
    }
}
