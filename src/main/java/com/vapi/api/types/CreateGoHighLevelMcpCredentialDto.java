/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CreateGoHighLevelMcpCredentialDto.Builder.class)
public final class CreateGoHighLevelMcpCredentialDto {
    private final Oauth2AuthenticationSession authenticationSession;

    private final Optional<String> name;

    private final Map<String, Object> additionalProperties;

    private CreateGoHighLevelMcpCredentialDto(
            Oauth2AuthenticationSession authenticationSession,
            Optional<String> name,
            Map<String, Object> additionalProperties) {
        this.authenticationSession = authenticationSession;
        this.name = name;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the authentication session for the credential.
     */
    @JsonProperty("authenticationSession")
    public Oauth2AuthenticationSession getAuthenticationSession() {
        return authenticationSession;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CreateGoHighLevelMcpCredentialDto && equalTo((CreateGoHighLevelMcpCredentialDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CreateGoHighLevelMcpCredentialDto other) {
        return authenticationSession.equals(other.authenticationSession) && name.equals(other.name);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.authenticationSession, this.name);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AuthenticationSessionStage builder() {
        return new Builder();
    }

    public interface AuthenticationSessionStage {
        /**
         * <p>This is the authentication session for the credential.</p>
         */
        _FinalStage authenticationSession(@NotNull Oauth2AuthenticationSession authenticationSession);

        Builder from(CreateGoHighLevelMcpCredentialDto other);
    }

    public interface _FinalStage {
        CreateGoHighLevelMcpCredentialDto build();

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        _FinalStage name(Optional<String> name);

        _FinalStage name(String name);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AuthenticationSessionStage, _FinalStage {
        private Oauth2AuthenticationSession authenticationSession;

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CreateGoHighLevelMcpCredentialDto other) {
            authenticationSession(other.getAuthenticationSession());
            name(other.getName());
            return this;
        }

        /**
         * <p>This is the authentication session for the credential.</p>
         * <p>This is the authentication session for the credential.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("authenticationSession")
        public _FinalStage authenticationSession(@NotNull Oauth2AuthenticationSession authenticationSession) {
            this.authenticationSession =
                    Objects.requireNonNull(authenticationSession, "authenticationSession must not be null");
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(Optional<String> name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        public CreateGoHighLevelMcpCredentialDto build() {
            return new CreateGoHighLevelMcpCredentialDto(authenticationSession, name, additionalProperties);
        }
    }
}
