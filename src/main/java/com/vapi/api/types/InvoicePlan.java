/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = InvoicePlan.Builder.class)
public final class InvoicePlan {
    private final Optional<String> companyName;

    private final Optional<String> companyAddress;

    private final Optional<String> companyTaxId;

    private final Optional<String> companyEmail;

    private final Map<String, Object> additionalProperties;

    private InvoicePlan(
            Optional<String> companyName,
            Optional<String> companyAddress,
            Optional<String> companyTaxId,
            Optional<String> companyEmail,
            Map<String, Object> additionalProperties) {
        this.companyName = companyName;
        this.companyAddress = companyAddress;
        this.companyTaxId = companyTaxId;
        this.companyEmail = companyEmail;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the name of the company.
     */
    @JsonProperty("companyName")
    public Optional<String> getCompanyName() {
        return companyName;
    }

    /**
     * @return This is the address of the company.
     */
    @JsonProperty("companyAddress")
    public Optional<String> getCompanyAddress() {
        return companyAddress;
    }

    /**
     * @return This is the tax ID of the company.
     */
    @JsonProperty("companyTaxId")
    public Optional<String> getCompanyTaxId() {
        return companyTaxId;
    }

    /**
     * @return This is the preferred invoicing email of the company. If not specified, defaults to the subscription's email.
     */
    @JsonProperty("companyEmail")
    public Optional<String> getCompanyEmail() {
        return companyEmail;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof InvoicePlan && equalTo((InvoicePlan) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(InvoicePlan other) {
        return companyName.equals(other.companyName)
                && companyAddress.equals(other.companyAddress)
                && companyTaxId.equals(other.companyTaxId)
                && companyEmail.equals(other.companyEmail);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.companyName, this.companyAddress, this.companyTaxId, this.companyEmail);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<String> companyName = Optional.empty();

        private Optional<String> companyAddress = Optional.empty();

        private Optional<String> companyTaxId = Optional.empty();

        private Optional<String> companyEmail = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(InvoicePlan other) {
            companyName(other.getCompanyName());
            companyAddress(other.getCompanyAddress());
            companyTaxId(other.getCompanyTaxId());
            companyEmail(other.getCompanyEmail());
            return this;
        }

        /**
         * <p>This is the name of the company.</p>
         */
        @JsonSetter(value = "companyName", nulls = Nulls.SKIP)
        public Builder companyName(Optional<String> companyName) {
            this.companyName = companyName;
            return this;
        }

        public Builder companyName(String companyName) {
            this.companyName = Optional.ofNullable(companyName);
            return this;
        }

        /**
         * <p>This is the address of the company.</p>
         */
        @JsonSetter(value = "companyAddress", nulls = Nulls.SKIP)
        public Builder companyAddress(Optional<String> companyAddress) {
            this.companyAddress = companyAddress;
            return this;
        }

        public Builder companyAddress(String companyAddress) {
            this.companyAddress = Optional.ofNullable(companyAddress);
            return this;
        }

        /**
         * <p>This is the tax ID of the company.</p>
         */
        @JsonSetter(value = "companyTaxId", nulls = Nulls.SKIP)
        public Builder companyTaxId(Optional<String> companyTaxId) {
            this.companyTaxId = companyTaxId;
            return this;
        }

        public Builder companyTaxId(String companyTaxId) {
            this.companyTaxId = Optional.ofNullable(companyTaxId);
            return this;
        }

        /**
         * <p>This is the preferred invoicing email of the company. If not specified, defaults to the subscription's email.</p>
         */
        @JsonSetter(value = "companyEmail", nulls = Nulls.SKIP)
        public Builder companyEmail(Optional<String> companyEmail) {
            this.companyEmail = companyEmail;
            return this;
        }

        public Builder companyEmail(String companyEmail) {
            this.companyEmail = Optional.ofNullable(companyEmail);
            return this;
        }

        public InvoicePlan build() {
            return new InvoicePlan(companyName, companyAddress, companyTaxId, companyEmail, additionalProperties);
        }
    }
}
