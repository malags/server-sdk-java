/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = AnalyticsQueryResult.Builder.class)
public final class AnalyticsQueryResult {
    private final String name;

    private final TimeRange timeRange;

    private final List<Map<String, Object>> result;

    private final Map<String, Object> additionalProperties;

    private AnalyticsQueryResult(
            String name,
            TimeRange timeRange,
            List<Map<String, Object>> result,
            Map<String, Object> additionalProperties) {
        this.name = name;
        this.timeRange = timeRange;
        this.result = result;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the unique key for the query.
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return This is the time range for the query.
     */
    @JsonProperty("timeRange")
    public TimeRange getTimeRange() {
        return timeRange;
    }

    /**
     * @return This is the result of the query, a list of unique groups with result of their aggregations.
     * <p>Example:
     * &quot;result&quot;: [
     * { &quot;date&quot;: &quot;2023-01-01&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-ended-call&quot;, &quot;sumDuration&quot;: 120, &quot;avgCost&quot;: 10.5 },
     * { &quot;date&quot;: &quot;2023-01-02&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-did-not-give-microphone-permission&quot;, &quot;sumDuration&quot;: 0, &quot;avgCost&quot;: 0 },
     * // Additional results
     * ]</p>
     */
    @JsonProperty("result")
    public List<Map<String, Object>> getResult() {
        return result;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof AnalyticsQueryResult && equalTo((AnalyticsQueryResult) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(AnalyticsQueryResult other) {
        return name.equals(other.name) && timeRange.equals(other.timeRange) && result.equals(other.result);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.name, this.timeRange, this.result);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        /**
         * <p>This is the unique key for the query.</p>
         */
        TimeRangeStage name(@NotNull String name);

        Builder from(AnalyticsQueryResult other);
    }

    public interface TimeRangeStage {
        /**
         * <p>This is the time range for the query.</p>
         */
        _FinalStage timeRange(@NotNull TimeRange timeRange);
    }

    public interface _FinalStage {
        AnalyticsQueryResult build();

        /**
         * <p>This is the result of the query, a list of unique groups with result of their aggregations.</p>
         * <p>Example:
         * &quot;result&quot;: [
         * { &quot;date&quot;: &quot;2023-01-01&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-ended-call&quot;, &quot;sumDuration&quot;: 120, &quot;avgCost&quot;: 10.5 },
         * { &quot;date&quot;: &quot;2023-01-02&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-did-not-give-microphone-permission&quot;, &quot;sumDuration&quot;: 0, &quot;avgCost&quot;: 0 },
         * // Additional results
         * ]</p>
         */
        _FinalStage result(List<Map<String, Object>> result);

        _FinalStage addResult(Map<String, Object> result);

        _FinalStage addAllResult(List<Map<String, Object>> result);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, TimeRangeStage, _FinalStage {
        private String name;

        private TimeRange timeRange;

        private List<Map<String, Object>> result = new ArrayList<>();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(AnalyticsQueryResult other) {
            name(other.getName());
            timeRange(other.getTimeRange());
            result(other.getResult());
            return this;
        }

        /**
         * <p>This is the unique key for the query.</p>
         * <p>This is the unique key for the query.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public TimeRangeStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        /**
         * <p>This is the time range for the query.</p>
         * <p>This is the time range for the query.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("timeRange")
        public _FinalStage timeRange(@NotNull TimeRange timeRange) {
            this.timeRange = Objects.requireNonNull(timeRange, "timeRange must not be null");
            return this;
        }

        /**
         * <p>This is the result of the query, a list of unique groups with result of their aggregations.</p>
         * <p>Example:
         * &quot;result&quot;: [
         * { &quot;date&quot;: &quot;2023-01-01&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-ended-call&quot;, &quot;sumDuration&quot;: 120, &quot;avgCost&quot;: 10.5 },
         * { &quot;date&quot;: &quot;2023-01-02&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-did-not-give-microphone-permission&quot;, &quot;sumDuration&quot;: 0, &quot;avgCost&quot;: 0 },
         * // Additional results
         * ]</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllResult(List<Map<String, Object>> result) {
            this.result.addAll(result);
            return this;
        }

        /**
         * <p>This is the result of the query, a list of unique groups with result of their aggregations.</p>
         * <p>Example:
         * &quot;result&quot;: [
         * { &quot;date&quot;: &quot;2023-01-01&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-ended-call&quot;, &quot;sumDuration&quot;: 120, &quot;avgCost&quot;: 10.5 },
         * { &quot;date&quot;: &quot;2023-01-02&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-did-not-give-microphone-permission&quot;, &quot;sumDuration&quot;: 0, &quot;avgCost&quot;: 0 },
         * // Additional results
         * ]</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addResult(Map<String, Object> result) {
            this.result.add(result);
            return this;
        }

        /**
         * <p>This is the result of the query, a list of unique groups with result of their aggregations.</p>
         * <p>Example:
         * &quot;result&quot;: [
         * { &quot;date&quot;: &quot;2023-01-01&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-ended-call&quot;, &quot;sumDuration&quot;: 120, &quot;avgCost&quot;: 10.5 },
         * { &quot;date&quot;: &quot;2023-01-02&quot;, &quot;assistantId&quot;: &quot;123&quot;, &quot;endedReason&quot;: &quot;customer-did-not-give-microphone-permission&quot;, &quot;sumDuration&quot;: 0, &quot;avgCost&quot;: 0 },
         * // Additional results
         * ]</p>
         */
        @java.lang.Override
        @JsonSetter(value = "result", nulls = Nulls.SKIP)
        public _FinalStage result(List<Map<String, Object>> result) {
            this.result.clear();
            this.result.addAll(result);
            return this;
        }

        @java.lang.Override
        public AnalyticsQueryResult build() {
            return new AnalyticsQueryResult(name, timeRange, result, additionalProperties);
        }
    }
}
