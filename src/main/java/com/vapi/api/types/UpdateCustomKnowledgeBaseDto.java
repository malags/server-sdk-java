/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = UpdateCustomKnowledgeBaseDto.Builder.class)
public final class UpdateCustomKnowledgeBaseDto {
    private final Optional<Server> server;

    private final Map<String, Object> additionalProperties;

    private UpdateCustomKnowledgeBaseDto(Optional<Server> server, Map<String, Object> additionalProperties) {
        this.server = server;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is where the knowledge base request will be sent.
     * <p>Request Example:</p>
     * <p>POST https://{server.url}
     * Content-Type: application/json</p>
     * <p>{
     * &quot;messsage&quot;: {
     * &quot;type&quot;: &quot;knowledge-base-request&quot;,
     * &quot;messages&quot;: [
     * {
     * &quot;role&quot;: &quot;user&quot;,
     * &quot;content&quot;: &quot;Why is ocean blue?&quot;
     * }
     * ],
     * ...other metadata about the call...
     * }
     * }</p>
     * <p>Response Expected:</p>
     * <pre><code>{
     *   &quot;message&quot;: {
     *      &quot;role&quot;: &quot;assistant&quot;,
     *      &quot;content&quot;: &quot;The ocean is blue because water absorbs everything but blue.&quot;,
     *   }, // YOU CAN RETURN THE EXACT RESPONSE TO SPEAK
     *   &quot;documents&quot;: [
     *     {
     *       &quot;content&quot;: &quot;The ocean is blue primarily because water absorbs colors in the red part of the light spectrum and scatters the blue light, making it more visible to our eyes.&quot;,
     *       &quot;similarity&quot;: 1
     *     },
     *     {
     *       &quot;content&quot;: &quot;Blue light is scattered more by the water molecules than other colors, enhancing the blue appearance of the ocean.&quot;,
     *       &quot;similarity&quot;: .5
     *     }
     *   ] // OR, YOU CAN RETURN AN ARRAY OF DOCUMENTS THAT WILL BE SENT TO THE MODEL
     * }
     * </code></pre>
     */
    @JsonProperty("server")
    public Optional<Server> getServer() {
        return server;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof UpdateCustomKnowledgeBaseDto && equalTo((UpdateCustomKnowledgeBaseDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(UpdateCustomKnowledgeBaseDto other) {
        return server.equals(other.server);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.server);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static Builder builder() {
        return new Builder();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder {
        private Optional<Server> server = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        public Builder from(UpdateCustomKnowledgeBaseDto other) {
            server(other.getServer());
            return this;
        }

        /**
         * <p>This is where the knowledge base request will be sent.</p>
         * <p>Request Example:</p>
         * <p>POST https://{server.url}
         * Content-Type: application/json</p>
         * <p>{
         * &quot;messsage&quot;: {
         * &quot;type&quot;: &quot;knowledge-base-request&quot;,
         * &quot;messages&quot;: [
         * {
         * &quot;role&quot;: &quot;user&quot;,
         * &quot;content&quot;: &quot;Why is ocean blue?&quot;
         * }
         * ],
         * ...other metadata about the call...
         * }
         * }</p>
         * <p>Response Expected:</p>
         * <pre><code>{
         *   &quot;message&quot;: {
         *      &quot;role&quot;: &quot;assistant&quot;,
         *      &quot;content&quot;: &quot;The ocean is blue because water absorbs everything but blue.&quot;,
         *   }, // YOU CAN RETURN THE EXACT RESPONSE TO SPEAK
         *   &quot;documents&quot;: [
         *     {
         *       &quot;content&quot;: &quot;The ocean is blue primarily because water absorbs colors in the red part of the light spectrum and scatters the blue light, making it more visible to our eyes.&quot;,
         *       &quot;similarity&quot;: 1
         *     },
         *     {
         *       &quot;content&quot;: &quot;Blue light is scattered more by the water molecules than other colors, enhancing the blue appearance of the ocean.&quot;,
         *       &quot;similarity&quot;: .5
         *     }
         *   ] // OR, YOU CAN RETURN AN ARRAY OF DOCUMENTS THAT WILL BE SENT TO THE MODEL
         * }
         * </code></pre>
         */
        @JsonSetter(value = "server", nulls = Nulls.SKIP)
        public Builder server(Optional<Server> server) {
            this.server = server;
            return this;
        }

        public Builder server(Server server) {
            this.server = Optional.ofNullable(server);
            return this;
        }

        public UpdateCustomKnowledgeBaseDto build() {
            return new UpdateCustomKnowledgeBaseDto(server, additionalProperties);
        }
    }
}
