/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = VonageCredential.Builder.class)
public final class VonageCredential {
    private final String vonageApplicationPrivateKey;

    private final String apiSecret;

    private final String id;

    private final String orgId;

    private final OffsetDateTime createdAt;

    private final OffsetDateTime updatedAt;

    private final String vonageApplicationId;

    private final Optional<String> name;

    private final String apiKey;

    private final Map<String, Object> additionalProperties;

    private VonageCredential(
            String vonageApplicationPrivateKey,
            String apiSecret,
            String id,
            String orgId,
            OffsetDateTime createdAt,
            OffsetDateTime updatedAt,
            String vonageApplicationId,
            Optional<String> name,
            String apiKey,
            Map<String, Object> additionalProperties) {
        this.vonageApplicationPrivateKey = vonageApplicationPrivateKey;
        this.apiSecret = apiSecret;
        this.id = id;
        this.orgId = orgId;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.vonageApplicationId = vonageApplicationId;
        this.name = name;
        this.apiKey = apiKey;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("vonageApplicationPrivateKey")
    public String getVonageApplicationPrivateKey() {
        return vonageApplicationPrivateKey;
    }

    @JsonProperty("provider")
    public String getProvider() {
        return "vonage";
    }

    /**
     * @return This is not returned in the API.
     */
    @JsonProperty("apiSecret")
    public String getApiSecret() {
        return apiSecret;
    }

    /**
     * @return This is the unique identifier for the credential.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return This is the unique identifier for the org that this credential belongs to.
     */
    @JsonProperty("orgId")
    public String getOrgId() {
        return orgId;
    }

    /**
     * @return This is the ISO 8601 date-time string of when the credential was created.
     */
    @JsonProperty("createdAt")
    public OffsetDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * @return This is the ISO 8601 date-time string of when the assistant was last updated.
     */
    @JsonProperty("updatedAt")
    public OffsetDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * @return This is the Vonage Application ID for the credential.
     * <p>Only relevant for Vonage credentials.</p>
     */
    @JsonProperty("vonageApplicationId")
    public String getVonageApplicationId() {
        return vonageApplicationId;
    }

    /**
     * @return This is the name of credential. This is just for your reference.
     */
    @JsonProperty("name")
    public Optional<String> getName() {
        return name;
    }

    @JsonProperty("apiKey")
    public String getApiKey() {
        return apiKey;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof VonageCredential && equalTo((VonageCredential) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(VonageCredential other) {
        return vonageApplicationPrivateKey.equals(other.vonageApplicationPrivateKey)
                && apiSecret.equals(other.apiSecret)
                && id.equals(other.id)
                && orgId.equals(other.orgId)
                && createdAt.equals(other.createdAt)
                && updatedAt.equals(other.updatedAt)
                && vonageApplicationId.equals(other.vonageApplicationId)
                && name.equals(other.name)
                && apiKey.equals(other.apiKey);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(
                this.vonageApplicationPrivateKey,
                this.apiSecret,
                this.id,
                this.orgId,
                this.createdAt,
                this.updatedAt,
                this.vonageApplicationId,
                this.name,
                this.apiKey);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static VonageApplicationPrivateKeyStage builder() {
        return new Builder();
    }

    public interface VonageApplicationPrivateKeyStage {
        /**
         * <p>This is not returned in the API.</p>
         */
        ApiSecretStage vonageApplicationPrivateKey(@NotNull String vonageApplicationPrivateKey);

        Builder from(VonageCredential other);
    }

    public interface ApiSecretStage {
        /**
         * <p>This is not returned in the API.</p>
         */
        IdStage apiSecret(@NotNull String apiSecret);
    }

    public interface IdStage {
        /**
         * <p>This is the unique identifier for the credential.</p>
         */
        OrgIdStage id(@NotNull String id);
    }

    public interface OrgIdStage {
        /**
         * <p>This is the unique identifier for the org that this credential belongs to.</p>
         */
        CreatedAtStage orgId(@NotNull String orgId);
    }

    public interface CreatedAtStage {
        /**
         * <p>This is the ISO 8601 date-time string of when the credential was created.</p>
         */
        UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt);
    }

    public interface UpdatedAtStage {
        /**
         * <p>This is the ISO 8601 date-time string of when the assistant was last updated.</p>
         */
        VonageApplicationIdStage updatedAt(@NotNull OffsetDateTime updatedAt);
    }

    public interface VonageApplicationIdStage {
        /**
         * <p>This is the Vonage Application ID for the credential.</p>
         * <p>Only relevant for Vonage credentials.</p>
         */
        ApiKeyStage vonageApplicationId(@NotNull String vonageApplicationId);
    }

    public interface ApiKeyStage {
        _FinalStage apiKey(@NotNull String apiKey);
    }

    public interface _FinalStage {
        VonageCredential build();

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        _FinalStage name(Optional<String> name);

        _FinalStage name(String name);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder
            implements VonageApplicationPrivateKeyStage,
                    ApiSecretStage,
                    IdStage,
                    OrgIdStage,
                    CreatedAtStage,
                    UpdatedAtStage,
                    VonageApplicationIdStage,
                    ApiKeyStage,
                    _FinalStage {
        private String vonageApplicationPrivateKey;

        private String apiSecret;

        private String id;

        private String orgId;

        private OffsetDateTime createdAt;

        private OffsetDateTime updatedAt;

        private String vonageApplicationId;

        private String apiKey;

        private Optional<String> name = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(VonageCredential other) {
            vonageApplicationPrivateKey(other.getVonageApplicationPrivateKey());
            apiSecret(other.getApiSecret());
            id(other.getId());
            orgId(other.getOrgId());
            createdAt(other.getCreatedAt());
            updatedAt(other.getUpdatedAt());
            vonageApplicationId(other.getVonageApplicationId());
            name(other.getName());
            apiKey(other.getApiKey());
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("vonageApplicationPrivateKey")
        public ApiSecretStage vonageApplicationPrivateKey(@NotNull String vonageApplicationPrivateKey) {
            this.vonageApplicationPrivateKey =
                    Objects.requireNonNull(vonageApplicationPrivateKey, "vonageApplicationPrivateKey must not be null");
            return this;
        }

        /**
         * <p>This is not returned in the API.</p>
         * <p>This is not returned in the API.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("apiSecret")
        public IdStage apiSecret(@NotNull String apiSecret) {
            this.apiSecret = Objects.requireNonNull(apiSecret, "apiSecret must not be null");
            return this;
        }

        /**
         * <p>This is the unique identifier for the credential.</p>
         * <p>This is the unique identifier for the credential.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public OrgIdStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>This is the unique identifier for the org that this credential belongs to.</p>
         * <p>This is the unique identifier for the org that this credential belongs to.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("orgId")
        public CreatedAtStage orgId(@NotNull String orgId) {
            this.orgId = Objects.requireNonNull(orgId, "orgId must not be null");
            return this;
        }

        /**
         * <p>This is the ISO 8601 date-time string of when the credential was created.</p>
         * <p>This is the ISO 8601 date-time string of when the credential was created.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("createdAt")
        public UpdatedAtStage createdAt(@NotNull OffsetDateTime createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt, "createdAt must not be null");
            return this;
        }

        /**
         * <p>This is the ISO 8601 date-time string of when the assistant was last updated.</p>
         * <p>This is the ISO 8601 date-time string of when the assistant was last updated.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("updatedAt")
        public VonageApplicationIdStage updatedAt(@NotNull OffsetDateTime updatedAt) {
            this.updatedAt = Objects.requireNonNull(updatedAt, "updatedAt must not be null");
            return this;
        }

        /**
         * <p>This is the Vonage Application ID for the credential.</p>
         * <p>Only relevant for Vonage credentials.</p>
         * <p>This is the Vonage Application ID for the credential.</p>
         * <p>Only relevant for Vonage credentials.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("vonageApplicationId")
        public ApiKeyStage vonageApplicationId(@NotNull String vonageApplicationId) {
            this.vonageApplicationId =
                    Objects.requireNonNull(vonageApplicationId, "vonageApplicationId must not be null");
            return this;
        }

        @java.lang.Override
        @JsonSetter("apiKey")
        public _FinalStage apiKey(@NotNull String apiKey) {
            this.apiKey = Objects.requireNonNull(apiKey, "apiKey must not be null");
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage name(String name) {
            this.name = Optional.ofNullable(name);
            return this;
        }

        /**
         * <p>This is the name of credential. This is just for your reference.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "name", nulls = Nulls.SKIP)
        public _FinalStage name(Optional<String> name) {
            this.name = name;
            return this;
        }

        @java.lang.Override
        public VonageCredential build() {
            return new VonageCredential(
                    vonageApplicationPrivateKey,
                    apiSecret,
                    id,
                    orgId,
                    createdAt,
                    updatedAt,
                    vonageApplicationId,
                    name,
                    apiKey,
                    additionalProperties);
        }
    }
}
