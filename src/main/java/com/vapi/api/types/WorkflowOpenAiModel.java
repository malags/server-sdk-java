/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WorkflowOpenAiModel.Builder.class)
public final class WorkflowOpenAiModel {
    private final WorkflowOpenAiModelModel model;

    private final Optional<Double> temperature;

    private final Optional<Double> maxTokens;

    private final Map<String, Object> additionalProperties;

    private WorkflowOpenAiModel(
            WorkflowOpenAiModelModel model,
            Optional<Double> temperature,
            Optional<Double> maxTokens,
            Map<String, Object> additionalProperties) {
        this.model = model;
        this.temperature = temperature;
        this.maxTokens = maxTokens;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the OpenAI model that will be used.
     * <p>When using Vapi OpenAI or your own Azure Credentials, you have the option to specify the region for the selected model. This shouldn't be specified unless you have a specific reason to do so. Vapi will automatically find the fastest region that make sense.
     * This is helpful when you are required to comply with Data Residency rules. Learn more about Azure regions here https://azure.microsoft.com/en-us/explore/global-infrastructure/data-residency/.</p>
     */
    @JsonProperty("model")
    public WorkflowOpenAiModelModel getModel() {
        return model;
    }

    /**
     * @return This is the temperature of the model.
     */
    @JsonProperty("temperature")
    public Optional<Double> getTemperature() {
        return temperature;
    }

    /**
     * @return This is the max tokens of the model.
     */
    @JsonProperty("maxTokens")
    public Optional<Double> getMaxTokens() {
        return maxTokens;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WorkflowOpenAiModel && equalTo((WorkflowOpenAiModel) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WorkflowOpenAiModel other) {
        return model.equals(other.model) && temperature.equals(other.temperature) && maxTokens.equals(other.maxTokens);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.model, this.temperature, this.maxTokens);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ModelStage builder() {
        return new Builder();
    }

    public interface ModelStage {
        /**
         * <p>This is the OpenAI model that will be used.</p>
         * <p>When using Vapi OpenAI or your own Azure Credentials, you have the option to specify the region for the selected model. This shouldn't be specified unless you have a specific reason to do so. Vapi will automatically find the fastest region that make sense.
         * This is helpful when you are required to comply with Data Residency rules. Learn more about Azure regions here https://azure.microsoft.com/en-us/explore/global-infrastructure/data-residency/.</p>
         */
        _FinalStage model(@NotNull WorkflowOpenAiModelModel model);

        Builder from(WorkflowOpenAiModel other);
    }

    public interface _FinalStage {
        WorkflowOpenAiModel build();

        /**
         * <p>This is the temperature of the model.</p>
         */
        _FinalStage temperature(Optional<Double> temperature);

        _FinalStage temperature(Double temperature);

        /**
         * <p>This is the max tokens of the model.</p>
         */
        _FinalStage maxTokens(Optional<Double> maxTokens);

        _FinalStage maxTokens(Double maxTokens);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ModelStage, _FinalStage {
        private WorkflowOpenAiModelModel model;

        private Optional<Double> maxTokens = Optional.empty();

        private Optional<Double> temperature = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WorkflowOpenAiModel other) {
            model(other.getModel());
            temperature(other.getTemperature());
            maxTokens(other.getMaxTokens());
            return this;
        }

        /**
         * <p>This is the OpenAI model that will be used.</p>
         * <p>When using Vapi OpenAI or your own Azure Credentials, you have the option to specify the region for the selected model. This shouldn't be specified unless you have a specific reason to do so. Vapi will automatically find the fastest region that make sense.
         * This is helpful when you are required to comply with Data Residency rules. Learn more about Azure regions here https://azure.microsoft.com/en-us/explore/global-infrastructure/data-residency/.</p>
         * <p>This is the OpenAI model that will be used.</p>
         * <p>When using Vapi OpenAI or your own Azure Credentials, you have the option to specify the region for the selected model. This shouldn't be specified unless you have a specific reason to do so. Vapi will automatically find the fastest region that make sense.
         * This is helpful when you are required to comply with Data Residency rules. Learn more about Azure regions here https://azure.microsoft.com/en-us/explore/global-infrastructure/data-residency/.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("model")
        public _FinalStage model(@NotNull WorkflowOpenAiModelModel model) {
            this.model = Objects.requireNonNull(model, "model must not be null");
            return this;
        }

        /**
         * <p>This is the max tokens of the model.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage maxTokens(Double maxTokens) {
            this.maxTokens = Optional.ofNullable(maxTokens);
            return this;
        }

        /**
         * <p>This is the max tokens of the model.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "maxTokens", nulls = Nulls.SKIP)
        public _FinalStage maxTokens(Optional<Double> maxTokens) {
            this.maxTokens = maxTokens;
            return this;
        }

        /**
         * <p>This is the temperature of the model.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage temperature(Double temperature) {
            this.temperature = Optional.ofNullable(temperature);
            return this;
        }

        /**
         * <p>This is the temperature of the model.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "temperature", nulls = Nulls.SKIP)
        public _FinalStage temperature(Optional<Double> temperature) {
            this.temperature = temperature;
            return this;
        }

        @java.lang.Override
        public WorkflowOpenAiModel build() {
            return new WorkflowOpenAiModel(model, temperature, maxTokens, additionalProperties);
        }
    }
}
