/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.deser.std.StdDeserializer;
import com.vapi.api.core.ObjectMappers;
import java.io.IOException;
import java.util.Objects;

@JsonDeserialize(using = ServerMessageMessage.Deserializer.class)
public final class ServerMessageMessage {
    private final Object value;

    private final int type;

    private ServerMessageMessage(Object value, int type) {
        this.value = value;
        this.type = type;
    }

    @JsonValue
    public Object get() {
        return this.value;
    }

    @SuppressWarnings("unchecked")
    public <T> T visit(Visitor<T> visitor) {
        if (this.type == 0) {
            return visitor.visit((ServerMessageAssistantRequest) this.value);
        } else if (this.type == 1) {
            return visitor.visit((ServerMessageConversationUpdate) this.value);
        } else if (this.type == 2) {
            return visitor.visit((ServerMessageEndOfCallReport) this.value);
        } else if (this.type == 3) {
            return visitor.visit((ServerMessageHang) this.value);
        } else if (this.type == 4) {
            return visitor.visit((ServerMessageKnowledgeBaseRequest) this.value);
        } else if (this.type == 5) {
            return visitor.visit((ServerMessageModelOutput) this.value);
        } else if (this.type == 6) {
            return visitor.visit((ServerMessagePhoneCallControl) this.value);
        } else if (this.type == 7) {
            return visitor.visit((ServerMessageSpeechUpdate) this.value);
        } else if (this.type == 8) {
            return visitor.visit((ServerMessageStatusUpdate) this.value);
        } else if (this.type == 9) {
            return visitor.visit((ServerMessageToolCalls) this.value);
        } else if (this.type == 10) {
            return visitor.visit((ServerMessageTransferDestinationRequest) this.value);
        } else if (this.type == 11) {
            return visitor.visit((ServerMessageTransferUpdate) this.value);
        } else if (this.type == 12) {
            return visitor.visit((ServerMessageTranscript) this.value);
        } else if (this.type == 13) {
            return visitor.visit((ServerMessageUserInterrupted) this.value);
        } else if (this.type == 14) {
            return visitor.visit((ServerMessageLanguageChangeDetected) this.value);
        } else if (this.type == 15) {
            return visitor.visit((ServerMessageVoiceInput) this.value);
        } else if (this.type == 16) {
            return visitor.visit((ServerMessageVoiceRequest) this.value);
        } else if (this.type == 17) {
            return visitor.visit((ServerMessageCallEndpointingRequest) this.value);
        }
        throw new IllegalStateException("Failed to visit value. This should never happen.");
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ServerMessageMessage && equalTo((ServerMessageMessage) other);
    }

    private boolean equalTo(ServerMessageMessage other) {
        return value.equals(other.value);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.value);
    }

    @java.lang.Override
    public String toString() {
        return this.value.toString();
    }

    public static ServerMessageMessage of(ServerMessageAssistantRequest value) {
        return new ServerMessageMessage(value, 0);
    }

    public static ServerMessageMessage of(ServerMessageConversationUpdate value) {
        return new ServerMessageMessage(value, 1);
    }

    public static ServerMessageMessage of(ServerMessageEndOfCallReport value) {
        return new ServerMessageMessage(value, 2);
    }

    public static ServerMessageMessage of(ServerMessageHang value) {
        return new ServerMessageMessage(value, 3);
    }

    public static ServerMessageMessage of(ServerMessageKnowledgeBaseRequest value) {
        return new ServerMessageMessage(value, 4);
    }

    public static ServerMessageMessage of(ServerMessageModelOutput value) {
        return new ServerMessageMessage(value, 5);
    }

    public static ServerMessageMessage of(ServerMessagePhoneCallControl value) {
        return new ServerMessageMessage(value, 6);
    }

    public static ServerMessageMessage of(ServerMessageSpeechUpdate value) {
        return new ServerMessageMessage(value, 7);
    }

    public static ServerMessageMessage of(ServerMessageStatusUpdate value) {
        return new ServerMessageMessage(value, 8);
    }

    public static ServerMessageMessage of(ServerMessageToolCalls value) {
        return new ServerMessageMessage(value, 9);
    }

    public static ServerMessageMessage of(ServerMessageTransferDestinationRequest value) {
        return new ServerMessageMessage(value, 10);
    }

    public static ServerMessageMessage of(ServerMessageTransferUpdate value) {
        return new ServerMessageMessage(value, 11);
    }

    public static ServerMessageMessage of(ServerMessageTranscript value) {
        return new ServerMessageMessage(value, 12);
    }

    public static ServerMessageMessage of(ServerMessageUserInterrupted value) {
        return new ServerMessageMessage(value, 13);
    }

    public static ServerMessageMessage of(ServerMessageLanguageChangeDetected value) {
        return new ServerMessageMessage(value, 14);
    }

    public static ServerMessageMessage of(ServerMessageVoiceInput value) {
        return new ServerMessageMessage(value, 15);
    }

    public static ServerMessageMessage of(ServerMessageVoiceRequest value) {
        return new ServerMessageMessage(value, 16);
    }

    public static ServerMessageMessage of(ServerMessageCallEndpointingRequest value) {
        return new ServerMessageMessage(value, 17);
    }

    public interface Visitor<T> {
        T visit(ServerMessageAssistantRequest value);

        T visit(ServerMessageConversationUpdate value);

        T visit(ServerMessageEndOfCallReport value);

        T visit(ServerMessageHang value);

        T visit(ServerMessageKnowledgeBaseRequest value);

        T visit(ServerMessageModelOutput value);

        T visit(ServerMessagePhoneCallControl value);

        T visit(ServerMessageSpeechUpdate value);

        T visit(ServerMessageStatusUpdate value);

        T visit(ServerMessageToolCalls value);

        T visit(ServerMessageTransferDestinationRequest value);

        T visit(ServerMessageTransferUpdate value);

        T visit(ServerMessageTranscript value);

        T visit(ServerMessageUserInterrupted value);

        T visit(ServerMessageLanguageChangeDetected value);

        T visit(ServerMessageVoiceInput value);

        T visit(ServerMessageVoiceRequest value);

        T visit(ServerMessageCallEndpointingRequest value);
    }

    static final class Deserializer extends StdDeserializer<ServerMessageMessage> {
        Deserializer() {
            super(ServerMessageMessage.class);
        }

        @java.lang.Override
        public ServerMessageMessage deserialize(JsonParser p, DeserializationContext context) throws IOException {
            Object value = p.readValueAs(Object.class);
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageAssistantRequest.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageConversationUpdate.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageEndOfCallReport.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageHang.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageKnowledgeBaseRequest.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageModelOutput.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessagePhoneCallControl.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageSpeechUpdate.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageStatusUpdate.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageToolCalls.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageTransferDestinationRequest.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageTransferUpdate.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageTranscript.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageUserInterrupted.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageLanguageChangeDetected.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageVoiceInput.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageVoiceRequest.class));
            } catch (IllegalArgumentException e) {
            }
            try {
                return of(ObjectMappers.JSON_MAPPER.convertValue(value, ServerMessageCallEndpointingRequest.class));
            } catch (IllegalArgumentException e) {
            }
            throw new JsonParseException(p, "Failed to deserialize");
        }
    }
}
