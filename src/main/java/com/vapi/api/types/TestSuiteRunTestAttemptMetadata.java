/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = TestSuiteRunTestAttemptMetadata.Builder.class)
public final class TestSuiteRunTestAttemptMetadata {
    private final String sessionId;

    private final Map<String, Object> additionalProperties;

    private TestSuiteRunTestAttemptMetadata(String sessionId, Map<String, Object> additionalProperties) {
        this.sessionId = sessionId;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the session ID for the test attempt.
     */
    @JsonProperty("sessionId")
    public String getSessionId() {
        return sessionId;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof TestSuiteRunTestAttemptMetadata && equalTo((TestSuiteRunTestAttemptMetadata) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(TestSuiteRunTestAttemptMetadata other) {
        return sessionId.equals(other.sessionId);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.sessionId);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static SessionIdStage builder() {
        return new Builder();
    }

    public interface SessionIdStage {
        /**
         * <p>This is the session ID for the test attempt.</p>
         */
        _FinalStage sessionId(@NotNull String sessionId);

        Builder from(TestSuiteRunTestAttemptMetadata other);
    }

    public interface _FinalStage {
        TestSuiteRunTestAttemptMetadata build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements SessionIdStage, _FinalStage {
        private String sessionId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(TestSuiteRunTestAttemptMetadata other) {
            sessionId(other.getSessionId());
            return this;
        }

        /**
         * <p>This is the session ID for the test attempt.</p>
         * <p>This is the session ID for the test attempt.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("sessionId")
        public _FinalStage sessionId(@NotNull String sessionId) {
            this.sessionId = Objects.requireNonNull(sessionId, "sessionId must not be null");
            return this;
        }

        @java.lang.Override
        public TestSuiteRunTestAttemptMetadata build() {
            return new TestSuiteRunTestAttemptMetadata(sessionId, additionalProperties);
        }
    }
}
