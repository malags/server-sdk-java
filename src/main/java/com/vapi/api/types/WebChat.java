/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = WebChat.Builder.class)
public final class WebChat {
    private final String id;

    private final Optional<String> sessionId;

    private final List<WebChatOutputItem> output;

    private final Map<String, Object> additionalProperties;

    private WebChat(
            String id,
            Optional<String> sessionId,
            List<WebChatOutputItem> output,
            Map<String, Object> additionalProperties) {
        this.id = id;
        this.sessionId = sessionId;
        this.output = output;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the unique identifier for the chat.
     */
    @JsonProperty("id")
    public String getId() {
        return id;
    }

    /**
     * @return This is the ID of the session for the chat. Send it in the next chat request to continue the conversation.
     */
    @JsonProperty("sessionId")
    public Optional<String> getSessionId() {
        return sessionId;
    }

    /**
     * @return This is the output messages generated by the system in response to the input.
     */
    @JsonProperty("output")
    public List<WebChatOutputItem> getOutput() {
        return output;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof WebChat && equalTo((WebChat) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(WebChat other) {
        return id.equals(other.id) && sessionId.equals(other.sessionId) && output.equals(other.output);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.id, this.sessionId, this.output);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static IdStage builder() {
        return new Builder();
    }

    public interface IdStage {
        /**
         * <p>This is the unique identifier for the chat.</p>
         */
        _FinalStage id(@NotNull String id);

        Builder from(WebChat other);
    }

    public interface _FinalStage {
        WebChat build();

        /**
         * <p>This is the ID of the session for the chat. Send it in the next chat request to continue the conversation.</p>
         */
        _FinalStage sessionId(Optional<String> sessionId);

        _FinalStage sessionId(String sessionId);

        /**
         * <p>This is the output messages generated by the system in response to the input.</p>
         */
        _FinalStage output(List<WebChatOutputItem> output);

        _FinalStage addOutput(WebChatOutputItem output);

        _FinalStage addAllOutput(List<WebChatOutputItem> output);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements IdStage, _FinalStage {
        private String id;

        private List<WebChatOutputItem> output = new ArrayList<>();

        private Optional<String> sessionId = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(WebChat other) {
            id(other.getId());
            sessionId(other.getSessionId());
            output(other.getOutput());
            return this;
        }

        /**
         * <p>This is the unique identifier for the chat.</p>
         * <p>This is the unique identifier for the chat.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("id")
        public _FinalStage id(@NotNull String id) {
            this.id = Objects.requireNonNull(id, "id must not be null");
            return this;
        }

        /**
         * <p>This is the output messages generated by the system in response to the input.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllOutput(List<WebChatOutputItem> output) {
            this.output.addAll(output);
            return this;
        }

        /**
         * <p>This is the output messages generated by the system in response to the input.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addOutput(WebChatOutputItem output) {
            this.output.add(output);
            return this;
        }

        /**
         * <p>This is the output messages generated by the system in response to the input.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "output", nulls = Nulls.SKIP)
        public _FinalStage output(List<WebChatOutputItem> output) {
            this.output.clear();
            this.output.addAll(output);
            return this;
        }

        /**
         * <p>This is the ID of the session for the chat. Send it in the next chat request to continue the conversation.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage sessionId(String sessionId) {
            this.sessionId = Optional.ofNullable(sessionId);
            return this;
        }

        /**
         * <p>This is the ID of the session for the chat. Send it in the next chat request to continue the conversation.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "sessionId", nulls = Nulls.SKIP)
        public _FinalStage sessionId(Optional<String> sessionId) {
            this.sessionId = sessionId;
            return this;
        }

        @java.lang.Override
        public WebChat build() {
            return new WebChat(id, sessionId, output, additionalProperties);
        }
    }
}
