/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = CloneVoiceDto.Builder.class)
public final class CloneVoiceDto {
    private final String name;

    private final Optional<String> description;

    private final Optional<String> labels;

    private final List<String> files;

    private final Map<String, Object> additionalProperties;

    private CloneVoiceDto(
            String name,
            Optional<String> description,
            Optional<String> labels,
            List<String> files,
            Map<String, Object> additionalProperties) {
        this.name = name;
        this.description = description;
        this.labels = labels;
        this.files = files;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the name of the cloned voice in the provider account.
     */
    @JsonProperty("name")
    public String getName() {
        return name;
    }

    /**
     * @return This is the description of your cloned voice.
     */
    @JsonProperty("description")
    public Optional<String> getDescription() {
        return description;
    }

    /**
     * @return Serialized labels dictionary for the voice.
     */
    @JsonProperty("labels")
    public Optional<String> getLabels() {
        return labels;
    }

    /**
     * @return These are the files you want to use to clone your voice. Only Audio files are supported.
     */
    @JsonProperty("files")
    public List<String> getFiles() {
        return files;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof CloneVoiceDto && equalTo((CloneVoiceDto) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(CloneVoiceDto other) {
        return name.equals(other.name)
                && description.equals(other.description)
                && labels.equals(other.labels)
                && files.equals(other.files);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.name, this.description, this.labels, this.files);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static NameStage builder() {
        return new Builder();
    }

    public interface NameStage {
        /**
         * <p>This is the name of the cloned voice in the provider account.</p>
         */
        _FinalStage name(@NotNull String name);

        Builder from(CloneVoiceDto other);
    }

    public interface _FinalStage {
        CloneVoiceDto build();

        /**
         * <p>This is the description of your cloned voice.</p>
         */
        _FinalStage description(Optional<String> description);

        _FinalStage description(String description);

        /**
         * <p>Serialized labels dictionary for the voice.</p>
         */
        _FinalStage labels(Optional<String> labels);

        _FinalStage labels(String labels);

        /**
         * <p>These are the files you want to use to clone your voice. Only Audio files are supported.</p>
         */
        _FinalStage files(List<String> files);

        _FinalStage addFiles(String files);

        _FinalStage addAllFiles(List<String> files);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements NameStage, _FinalStage {
        private String name;

        private List<String> files = new ArrayList<>();

        private Optional<String> labels = Optional.empty();

        private Optional<String> description = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(CloneVoiceDto other) {
            name(other.getName());
            description(other.getDescription());
            labels(other.getLabels());
            files(other.getFiles());
            return this;
        }

        /**
         * <p>This is the name of the cloned voice in the provider account.</p>
         * <p>This is the name of the cloned voice in the provider account.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("name")
        public _FinalStage name(@NotNull String name) {
            this.name = Objects.requireNonNull(name, "name must not be null");
            return this;
        }

        /**
         * <p>These are the files you want to use to clone your voice. Only Audio files are supported.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addAllFiles(List<String> files) {
            this.files.addAll(files);
            return this;
        }

        /**
         * <p>These are the files you want to use to clone your voice. Only Audio files are supported.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage addFiles(String files) {
            this.files.add(files);
            return this;
        }

        /**
         * <p>These are the files you want to use to clone your voice. Only Audio files are supported.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "files", nulls = Nulls.SKIP)
        public _FinalStage files(List<String> files) {
            this.files.clear();
            this.files.addAll(files);
            return this;
        }

        /**
         * <p>Serialized labels dictionary for the voice.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage labels(String labels) {
            this.labels = Optional.ofNullable(labels);
            return this;
        }

        /**
         * <p>Serialized labels dictionary for the voice.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "labels", nulls = Nulls.SKIP)
        public _FinalStage labels(Optional<String> labels) {
            this.labels = labels;
            return this;
        }

        /**
         * <p>This is the description of your cloned voice.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage description(String description) {
            this.description = Optional.ofNullable(description);
            return this;
        }

        /**
         * <p>This is the description of your cloned voice.</p>
         */
        @java.lang.Override
        @JsonSetter(value = "description", nulls = Nulls.SKIP)
        public _FinalStage description(Optional<String> description) {
            this.description = description;
            return this;
        }

        @java.lang.Override
        public CloneVoiceDto build() {
            return new CloneVoiceDto(name, description, labels, files, additionalProperties);
        }
    }
}
