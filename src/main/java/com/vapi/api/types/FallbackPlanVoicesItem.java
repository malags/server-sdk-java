/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonUnwrapped;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Objects;
import java.util.Optional;

public final class FallbackPlanVoicesItem {
    private final Value value;

    @JsonCreator(mode = JsonCreator.Mode.DELEGATING)
    private FallbackPlanVoicesItem(Value value) {
        this.value = value;
    }

    public <T> T visit(Visitor<T> visitor) {
        return value.visit(visitor);
    }

    public static FallbackPlanVoicesItem azure(FallbackAzureVoice value) {
        return new FallbackPlanVoicesItem(new AzureValue(value));
    }

    public static FallbackPlanVoicesItem cartesia(FallbackCartesiaVoice value) {
        return new FallbackPlanVoicesItem(new CartesiaValue(value));
    }

    public static FallbackPlanVoicesItem hume(FallbackHumeVoice value) {
        return new FallbackPlanVoicesItem(new HumeValue(value));
    }

    public static FallbackPlanVoicesItem customVoice(FallbackCustomVoice value) {
        return new FallbackPlanVoicesItem(new CustomVoiceValue(value));
    }

    public static FallbackPlanVoicesItem deepgram(FallbackDeepgramVoice value) {
        return new FallbackPlanVoicesItem(new DeepgramValue(value));
    }

    public static FallbackPlanVoicesItem _11Labs(FallbackElevenLabsVoice value) {
        return new FallbackPlanVoicesItem(new _11LabsValue(value));
    }

    public static FallbackPlanVoicesItem vapi(FallbackVapiVoice value) {
        return new FallbackPlanVoicesItem(new VapiValue(value));
    }

    public static FallbackPlanVoicesItem lmnt(FallbackLmntVoice value) {
        return new FallbackPlanVoicesItem(new LmntValue(value));
    }

    public static FallbackPlanVoicesItem openai(FallbackOpenAiVoice value) {
        return new FallbackPlanVoicesItem(new OpenaiValue(value));
    }

    public static FallbackPlanVoicesItem playht(FallbackPlayHtVoice value) {
        return new FallbackPlanVoicesItem(new PlayhtValue(value));
    }

    public static FallbackPlanVoicesItem rimeAi(FallbackRimeAiVoice value) {
        return new FallbackPlanVoicesItem(new RimeAiValue(value));
    }

    public static FallbackPlanVoicesItem smallestAi(FallbackSmallestAiVoice value) {
        return new FallbackPlanVoicesItem(new SmallestAiValue(value));
    }

    public static FallbackPlanVoicesItem tavus(FallbackTavusVoice value) {
        return new FallbackPlanVoicesItem(new TavusValue(value));
    }

    public static FallbackPlanVoicesItem neuphonic(FallbackNeuphonicVoice value) {
        return new FallbackPlanVoicesItem(new NeuphonicValue(value));
    }

    public static FallbackPlanVoicesItem sesame(FallbackSesameVoice value) {
        return new FallbackPlanVoicesItem(new SesameValue(value));
    }

    public static FallbackPlanVoicesItem inworld(FallbackInworldVoice value) {
        return new FallbackPlanVoicesItem(new InworldValue(value));
    }

    public boolean isAzure() {
        return value instanceof AzureValue;
    }

    public boolean isCartesia() {
        return value instanceof CartesiaValue;
    }

    public boolean isHume() {
        return value instanceof HumeValue;
    }

    public boolean isCustomVoice() {
        return value instanceof CustomVoiceValue;
    }

    public boolean isDeepgram() {
        return value instanceof DeepgramValue;
    }

    public boolean is11Labs() {
        return value instanceof _11LabsValue;
    }

    public boolean isVapi() {
        return value instanceof VapiValue;
    }

    public boolean isLmnt() {
        return value instanceof LmntValue;
    }

    public boolean isOpenai() {
        return value instanceof OpenaiValue;
    }

    public boolean isPlayht() {
        return value instanceof PlayhtValue;
    }

    public boolean isRimeAi() {
        return value instanceof RimeAiValue;
    }

    public boolean isSmallestAi() {
        return value instanceof SmallestAiValue;
    }

    public boolean isTavus() {
        return value instanceof TavusValue;
    }

    public boolean isNeuphonic() {
        return value instanceof NeuphonicValue;
    }

    public boolean isSesame() {
        return value instanceof SesameValue;
    }

    public boolean isInworld() {
        return value instanceof InworldValue;
    }

    public boolean _isUnknown() {
        return value instanceof _UnknownValue;
    }

    public Optional<FallbackAzureVoice> getAzure() {
        if (isAzure()) {
            return Optional.of(((AzureValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackCartesiaVoice> getCartesia() {
        if (isCartesia()) {
            return Optional.of(((CartesiaValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackHumeVoice> getHume() {
        if (isHume()) {
            return Optional.of(((HumeValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackCustomVoice> getCustomVoice() {
        if (isCustomVoice()) {
            return Optional.of(((CustomVoiceValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackDeepgramVoice> getDeepgram() {
        if (isDeepgram()) {
            return Optional.of(((DeepgramValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackElevenLabsVoice> get11Labs() {
        if (is11Labs()) {
            return Optional.of(((_11LabsValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackVapiVoice> getVapi() {
        if (isVapi()) {
            return Optional.of(((VapiValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackLmntVoice> getLmnt() {
        if (isLmnt()) {
            return Optional.of(((LmntValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackOpenAiVoice> getOpenai() {
        if (isOpenai()) {
            return Optional.of(((OpenaiValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackPlayHtVoice> getPlayht() {
        if (isPlayht()) {
            return Optional.of(((PlayhtValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackRimeAiVoice> getRimeAi() {
        if (isRimeAi()) {
            return Optional.of(((RimeAiValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackSmallestAiVoice> getSmallestAi() {
        if (isSmallestAi()) {
            return Optional.of(((SmallestAiValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackTavusVoice> getTavus() {
        if (isTavus()) {
            return Optional.of(((TavusValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackNeuphonicVoice> getNeuphonic() {
        if (isNeuphonic()) {
            return Optional.of(((NeuphonicValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackSesameVoice> getSesame() {
        if (isSesame()) {
            return Optional.of(((SesameValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<FallbackInworldVoice> getInworld() {
        if (isInworld()) {
            return Optional.of(((InworldValue) value).value);
        }
        return Optional.empty();
    }

    public Optional<Object> _getUnknown() {
        if (_isUnknown()) {
            return Optional.of(((_UnknownValue) value).value);
        }
        return Optional.empty();
    }

    @JsonValue
    private Value getValue() {
        return this.value;
    }

    public interface Visitor<T> {
        T visitAzure(FallbackAzureVoice azure);

        T visitCartesia(FallbackCartesiaVoice cartesia);

        T visitHume(FallbackHumeVoice hume);

        T visitCustomVoice(FallbackCustomVoice customVoice);

        T visitDeepgram(FallbackDeepgramVoice deepgram);

        T visit11Labs(FallbackElevenLabsVoice _11Labs);

        T visitVapi(FallbackVapiVoice vapi);

        T visitLmnt(FallbackLmntVoice lmnt);

        T visitOpenai(FallbackOpenAiVoice openai);

        T visitPlayht(FallbackPlayHtVoice playht);

        T visitRimeAi(FallbackRimeAiVoice rimeAi);

        T visitSmallestAi(FallbackSmallestAiVoice smallestAi);

        T visitTavus(FallbackTavusVoice tavus);

        T visitNeuphonic(FallbackNeuphonicVoice neuphonic);

        T visitSesame(FallbackSesameVoice sesame);

        T visitInworld(FallbackInworldVoice inworld);

        T _visitUnknown(Object unknownType);
    }

    @JsonTypeInfo(use = JsonTypeInfo.Id.NAME, property = "provider", visible = true, defaultImpl = _UnknownValue.class)
    @JsonSubTypes({
        @JsonSubTypes.Type(AzureValue.class),
        @JsonSubTypes.Type(CartesiaValue.class),
        @JsonSubTypes.Type(HumeValue.class),
        @JsonSubTypes.Type(CustomVoiceValue.class),
        @JsonSubTypes.Type(DeepgramValue.class),
        @JsonSubTypes.Type(_11LabsValue.class),
        @JsonSubTypes.Type(VapiValue.class),
        @JsonSubTypes.Type(LmntValue.class),
        @JsonSubTypes.Type(OpenaiValue.class),
        @JsonSubTypes.Type(PlayhtValue.class),
        @JsonSubTypes.Type(RimeAiValue.class),
        @JsonSubTypes.Type(SmallestAiValue.class),
        @JsonSubTypes.Type(TavusValue.class),
        @JsonSubTypes.Type(NeuphonicValue.class),
        @JsonSubTypes.Type(SesameValue.class),
        @JsonSubTypes.Type(InworldValue.class)
    })
    @JsonIgnoreProperties(ignoreUnknown = true)
    private interface Value {
        <T> T visit(Visitor<T> visitor);
    }

    @JsonTypeName("azure")
    @JsonIgnoreProperties("provider")
    private static final class AzureValue implements Value {
        @JsonUnwrapped
        private FallbackAzureVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private AzureValue() {}

        private AzureValue(FallbackAzureVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitAzure(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof AzureValue && equalTo((AzureValue) other);
        }

        private boolean equalTo(AzureValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("cartesia")
    @JsonIgnoreProperties("provider")
    private static final class CartesiaValue implements Value {
        @JsonUnwrapped
        private FallbackCartesiaVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private CartesiaValue() {}

        private CartesiaValue(FallbackCartesiaVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitCartesia(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof CartesiaValue && equalTo((CartesiaValue) other);
        }

        private boolean equalTo(CartesiaValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("hume")
    @JsonIgnoreProperties("provider")
    private static final class HumeValue implements Value {
        @JsonUnwrapped
        private FallbackHumeVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private HumeValue() {}

        private HumeValue(FallbackHumeVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitHume(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof HumeValue && equalTo((HumeValue) other);
        }

        private boolean equalTo(HumeValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("custom-voice")
    @JsonIgnoreProperties("provider")
    private static final class CustomVoiceValue implements Value {
        @JsonUnwrapped
        private FallbackCustomVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private CustomVoiceValue() {}

        private CustomVoiceValue(FallbackCustomVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitCustomVoice(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof CustomVoiceValue && equalTo((CustomVoiceValue) other);
        }

        private boolean equalTo(CustomVoiceValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("deepgram")
    @JsonIgnoreProperties("provider")
    private static final class DeepgramValue implements Value {
        @JsonUnwrapped
        private FallbackDeepgramVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private DeepgramValue() {}

        private DeepgramValue(FallbackDeepgramVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitDeepgram(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof DeepgramValue && equalTo((DeepgramValue) other);
        }

        private boolean equalTo(DeepgramValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("11labs")
    @JsonIgnoreProperties("provider")
    private static final class _11LabsValue implements Value {
        @JsonUnwrapped
        private FallbackElevenLabsVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private _11LabsValue() {}

        private _11LabsValue(FallbackElevenLabsVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visit11Labs(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof _11LabsValue && equalTo((_11LabsValue) other);
        }

        private boolean equalTo(_11LabsValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("vapi")
    @JsonIgnoreProperties("provider")
    private static final class VapiValue implements Value {
        @JsonUnwrapped
        private FallbackVapiVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private VapiValue() {}

        private VapiValue(FallbackVapiVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitVapi(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof VapiValue && equalTo((VapiValue) other);
        }

        private boolean equalTo(VapiValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("lmnt")
    @JsonIgnoreProperties("provider")
    private static final class LmntValue implements Value {
        @JsonUnwrapped
        private FallbackLmntVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private LmntValue() {}

        private LmntValue(FallbackLmntVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitLmnt(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof LmntValue && equalTo((LmntValue) other);
        }

        private boolean equalTo(LmntValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("openai")
    @JsonIgnoreProperties("provider")
    private static final class OpenaiValue implements Value {
        @JsonUnwrapped
        private FallbackOpenAiVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private OpenaiValue() {}

        private OpenaiValue(FallbackOpenAiVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitOpenai(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof OpenaiValue && equalTo((OpenaiValue) other);
        }

        private boolean equalTo(OpenaiValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("playht")
    @JsonIgnoreProperties("provider")
    private static final class PlayhtValue implements Value {
        @JsonUnwrapped
        private FallbackPlayHtVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private PlayhtValue() {}

        private PlayhtValue(FallbackPlayHtVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitPlayht(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof PlayhtValue && equalTo((PlayhtValue) other);
        }

        private boolean equalTo(PlayhtValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("rime-ai")
    @JsonIgnoreProperties("provider")
    private static final class RimeAiValue implements Value {
        @JsonUnwrapped
        private FallbackRimeAiVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private RimeAiValue() {}

        private RimeAiValue(FallbackRimeAiVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitRimeAi(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof RimeAiValue && equalTo((RimeAiValue) other);
        }

        private boolean equalTo(RimeAiValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("smallest-ai")
    @JsonIgnoreProperties("provider")
    private static final class SmallestAiValue implements Value {
        @JsonUnwrapped
        private FallbackSmallestAiVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private SmallestAiValue() {}

        private SmallestAiValue(FallbackSmallestAiVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitSmallestAi(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof SmallestAiValue && equalTo((SmallestAiValue) other);
        }

        private boolean equalTo(SmallestAiValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("tavus")
    @JsonIgnoreProperties("provider")
    private static final class TavusValue implements Value {
        @JsonUnwrapped
        private FallbackTavusVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private TavusValue() {}

        private TavusValue(FallbackTavusVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitTavus(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof TavusValue && equalTo((TavusValue) other);
        }

        private boolean equalTo(TavusValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("neuphonic")
    @JsonIgnoreProperties("provider")
    private static final class NeuphonicValue implements Value {
        @JsonUnwrapped
        private FallbackNeuphonicVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private NeuphonicValue() {}

        private NeuphonicValue(FallbackNeuphonicVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitNeuphonic(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof NeuphonicValue && equalTo((NeuphonicValue) other);
        }

        private boolean equalTo(NeuphonicValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("sesame")
    @JsonIgnoreProperties("provider")
    private static final class SesameValue implements Value {
        @JsonUnwrapped
        private FallbackSesameVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private SesameValue() {}

        private SesameValue(FallbackSesameVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitSesame(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof SesameValue && equalTo((SesameValue) other);
        }

        private boolean equalTo(SesameValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonTypeName("inworld")
    @JsonIgnoreProperties("provider")
    private static final class InworldValue implements Value {
        @JsonUnwrapped
        private FallbackInworldVoice value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private InworldValue() {}

        private InworldValue(FallbackInworldVoice value) {
            this.value = value;
        }

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor.visitInworld(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof InworldValue && equalTo((InworldValue) other);
        }

        private boolean equalTo(InworldValue other) {
            return value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "value: " + value + "}";
        }
    }

    @JsonIgnoreProperties("provider")
    private static final class _UnknownValue implements Value {
        private String type;

        @JsonValue
        private Object value;

        @JsonCreator(mode = JsonCreator.Mode.PROPERTIES)
        private _UnknownValue(@JsonProperty("value") Object value) {}

        @java.lang.Override
        public <T> T visit(Visitor<T> visitor) {
            return visitor._visitUnknown(value);
        }

        @java.lang.Override
        public boolean equals(Object other) {
            if (this == other) return true;
            return other instanceof _UnknownValue && equalTo((_UnknownValue) other);
        }

        private boolean equalTo(_UnknownValue other) {
            return type.equals(other.type) && value.equals(other.value);
        }

        @java.lang.Override
        public int hashCode() {
            return Objects.hash(this.type, this.value);
        }

        @java.lang.Override
        public String toString() {
            return "FallbackPlanVoicesItem{" + "type: " + type + ", value: " + value + "}";
        }
    }
}
