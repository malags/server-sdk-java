/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.vapi.api.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.vapi.api.core.ObjectMappers;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import org.jetbrains.annotations.NotNull;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(builder = ClientInboundMessageAddMessage.Builder.class)
public final class ClientInboundMessageAddMessage {
    private final OpenAiMessage message;

    private final Optional<Boolean> triggerResponseEnabled;

    private final Map<String, Object> additionalProperties;

    private ClientInboundMessageAddMessage(
            OpenAiMessage message, Optional<Boolean> triggerResponseEnabled, Map<String, Object> additionalProperties) {
        this.message = message;
        this.triggerResponseEnabled = triggerResponseEnabled;
        this.additionalProperties = additionalProperties;
    }

    /**
     * @return This is the message to add to the conversation.
     */
    @JsonProperty("message")
    public OpenAiMessage getMessage() {
        return message;
    }

    /**
     * @return This is the flag to trigger a response, or to insert the message into the conversation history silently. Defaults to <code>true</code>.
     * <p>Usage:</p>
     * <ul>
     * <li>Use <code>true</code> to trigger a response.</li>
     * <li>Use <code>false</code> to insert the message into the conversation history silently.</li>
     * </ul>
     * <p>@default true</p>
     */
    @JsonProperty("triggerResponseEnabled")
    public Optional<Boolean> getTriggerResponseEnabled() {
        return triggerResponseEnabled;
    }

    @java.lang.Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof ClientInboundMessageAddMessage && equalTo((ClientInboundMessageAddMessage) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(ClientInboundMessageAddMessage other) {
        return message.equals(other.message) && triggerResponseEnabled.equals(other.triggerResponseEnabled);
    }

    @java.lang.Override
    public int hashCode() {
        return Objects.hash(this.message, this.triggerResponseEnabled);
    }

    @java.lang.Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static MessageStage builder() {
        return new Builder();
    }

    public interface MessageStage {
        /**
         * <p>This is the message to add to the conversation.</p>
         */
        _FinalStage message(@NotNull OpenAiMessage message);

        Builder from(ClientInboundMessageAddMessage other);
    }

    public interface _FinalStage {
        ClientInboundMessageAddMessage build();

        /**
         * <p>This is the flag to trigger a response, or to insert the message into the conversation history silently. Defaults to <code>true</code>.</p>
         * <p>Usage:</p>
         * <ul>
         * <li>Use <code>true</code> to trigger a response.</li>
         * <li>Use <code>false</code> to insert the message into the conversation history silently.</li>
         * </ul>
         * <p>@default true</p>
         */
        _FinalStage triggerResponseEnabled(Optional<Boolean> triggerResponseEnabled);

        _FinalStage triggerResponseEnabled(Boolean triggerResponseEnabled);
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements MessageStage, _FinalStage {
        private OpenAiMessage message;

        private Optional<Boolean> triggerResponseEnabled = Optional.empty();

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @java.lang.Override
        public Builder from(ClientInboundMessageAddMessage other) {
            message(other.getMessage());
            triggerResponseEnabled(other.getTriggerResponseEnabled());
            return this;
        }

        /**
         * <p>This is the message to add to the conversation.</p>
         * <p>This is the message to add to the conversation.</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        @JsonSetter("message")
        public _FinalStage message(@NotNull OpenAiMessage message) {
            this.message = Objects.requireNonNull(message, "message must not be null");
            return this;
        }

        /**
         * <p>This is the flag to trigger a response, or to insert the message into the conversation history silently. Defaults to <code>true</code>.</p>
         * <p>Usage:</p>
         * <ul>
         * <li>Use <code>true</code> to trigger a response.</li>
         * <li>Use <code>false</code> to insert the message into the conversation history silently.</li>
         * </ul>
         * <p>@default true</p>
         * @return Reference to {@code this} so that method calls can be chained together.
         */
        @java.lang.Override
        public _FinalStage triggerResponseEnabled(Boolean triggerResponseEnabled) {
            this.triggerResponseEnabled = Optional.ofNullable(triggerResponseEnabled);
            return this;
        }

        /**
         * <p>This is the flag to trigger a response, or to insert the message into the conversation history silently. Defaults to <code>true</code>.</p>
         * <p>Usage:</p>
         * <ul>
         * <li>Use <code>true</code> to trigger a response.</li>
         * <li>Use <code>false</code> to insert the message into the conversation history silently.</li>
         * </ul>
         * <p>@default true</p>
         */
        @java.lang.Override
        @JsonSetter(value = "triggerResponseEnabled", nulls = Nulls.SKIP)
        public _FinalStage triggerResponseEnabled(Optional<Boolean> triggerResponseEnabled) {
            this.triggerResponseEnabled = triggerResponseEnabled;
            return this;
        }

        @java.lang.Override
        public ClientInboundMessageAddMessage build() {
            return new ClientInboundMessageAddMessage(message, triggerResponseEnabled, additionalProperties);
        }
    }
}
